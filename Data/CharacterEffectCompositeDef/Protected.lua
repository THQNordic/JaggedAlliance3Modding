-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Id', "Protected",
	'Parameters', {
		PlaceObj('PresetParamPercent', {
			'Name', "base_chance",
			'Value', 80,
			'Tag', "<base_chance>%",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "max_ap_carried",
			'Value', 5,
			'Tag', "<max_ap_carried>",
		}),
	},
	'object_class', "CharacterEffect",
	'unit_reactions', {
		PlaceObj('UnitReaction', {
			Event = "OnCalcStartTurnAP",
			Handler = function (self, target, value)
				value = value + (self:ResolveValue("ap_carried") or 0) -- can be nil if added out of combat
				target:RemoveStatusEffect(self.class) -- remove immediately to unblock AP gain
				return value
			end,
		}),
	},
	'DisplayName', T(569020076106, --[[CharacterEffectCompositeDef Protected DisplayName]] "Taking cover"),
	'Description', T(682670978880, --[[CharacterEffectCompositeDef Protected Description]] "While coming from the <em>other side</em> of the <em>Cover</em> attacks against this unit have a high chance to become <em>Grazing hits</em> and the targeted body part is selected automatically."),
	'OnAdded', function (self, obj)
		if g_Combat or g_StartingCombat or g_TestingSaveLoadSystem then
			obj:RemoveStatusEffect("FreeMove")
			local ap_carry = Min(self:ResolveValue("max_ap_carried")*const.Scale.AP, obj.ActionPoints)
			self:SetParameter("ap_carried", ap_carry)
			if not obj.infinite_ap then
				obj.ActionPoints = 0
			end
			ObjModified(obj)
		end
		UpdateTakeCoverAction()
	end,
	'OnRemoved', function (self, obj)
		UpdateTakeCoverAction()
	end,
	'type', "Buff",
	'Icon', "UI/Hud/Status effects/protected",
	'RemoveOnEndCombat', true,
	'Shown', true,
	'HasFloatingText', true,
})

