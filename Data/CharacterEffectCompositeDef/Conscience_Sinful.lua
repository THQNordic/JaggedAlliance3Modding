-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Id', "Conscience_Sinful",
	'Parameters', {
		PlaceObj('PresetParamNumber', {
			'Name', "days",
			'Value', 1,
			'Tag', "<days>",
		}),
		PlaceObj('PresetParamPercent', {
			'Name', "decrease",
			'Value', 30,
			'Tag', "<decrease>%",
		}),
	},
	'Comment', "conversations related",
	'object_class', "StatusEffect",
	'msg_reactions', {
		PlaceObj('MsgReaction', {
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectAdded")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks)
				if IsKindOf(obj, "Unit") then
					local effect = obj:GetStatusEffect(self.id)
					effect:SetParameter("guilty_start_time", Game.CampaignTime)
					
					--local procentCalc = 1000-self:ResolveValue("decrease")*10
					--local stats = UnitPropertiesStats:GetProperties()
					--for i, stat in ipairs(stats) do
						--obj:AddModifier("guilty_" .. stat.id, stat.id, procentCalc)
					--end
				end
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks) end
				
			end,
			HandlerCode = function (self, obj, id, stacks)
				if IsKindOf(obj, "Unit") then
					local effect = obj:GetStatusEffect(self.id)
					effect:SetParameter("guilty_start_time", Game.CampaignTime)
					
					--local procentCalc = 1000-self:ResolveValue("decrease")*10
					--local stats = UnitPropertiesStats:GetProperties()
					--for i, stat in ipairs(stats) do
						--obj:AddModifier("guilty_" .. stat.id, stat.id, procentCalc)
					--end
				end
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectRemoved")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") then
					obj:SetEffectValue("guilty_start_time", false)
					
					-- Handles old guilty modifiers, new guilty applies morale modifier
					local stats = UnitPropertiesStats:GetProperties()
					for i, stat in ipairs(stats) do
						obj:RemoveModifier("guilty_" .. stat.id, stat.id)
					end
				end
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks, reason) end
				
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") then
					obj:SetEffectValue("guilty_start_time", false)
					
					-- Handles old guilty modifiers, new guilty applies morale modifier
					local stats = UnitPropertiesStats:GetProperties()
					for i, stat in ipairs(stats) do
						obj:RemoveModifier("guilty_" .. stat.id, stat.id)
					end
				end
			end,
		}),
		PlaceObj('MsgReactionEffects', {
			Effects = {
				PlaceObj('ConditionalEffect', {
					'Effects', {
						PlaceObj('ExecuteCode', {
							Code = function (self, obj)
								local effect = obj:GetStatusEffect("Conscience_Sinful")
								local duration = effect:ResolveValue("days")
								local startTime = effect:ResolveValue("guilty_start_time") or 0
								
								local dayStarted = GetTimeAsTable(startTime)
								dayStarted = dayStarted and dayStarted.day
								
								local dayNow = GetTimeAsTable(Game.CampaignTime)
								dayNow = dayNow and dayNow.day
								
								-- Intentionally check if days have passed calendar, and not time wise.
								if dayNow - dayStarted >= duration then
									obj:RemoveStatusEffect("Conscience_Sinful")
								end
							end,
							FuncCode = 'local effect = obj:GetStatusEffect("Conscience_Sinful")\nlocal duration = effect:ResolveValue("days")\nlocal startTime = effect:ResolveValue("guilty_start_time") or 0\n\nlocal dayStarted = GetTimeAsTable(startTime)\ndayStarted = dayStarted and dayStarted.day\n\nlocal dayNow = GetTimeAsTable(Game.CampaignTime)\ndayNow = dayNow and dayNow.day\n\n-- Intentionally check if days have passed calendar, and not time wise.\nif dayNow - dayStarted >= duration then\n	obj:RemoveStatusEffect("Conscience_Sinful")\nend',
							SaveAsText = false,
						}),
					},
				}),
			},
			Event = "SatelliteTick",
			Handler = function (self)
				CE_ExecReactionEffects(self, "SatelliteTick")
			end,
		}),
	},
	'DisplayName', T(634244208298, --[[CharacterEffectCompositeDef Conscience_Sinful DisplayName]] "Remorseful"),
	'Description', T(518452710606, --[[CharacterEffectCompositeDef Conscience_Sinful Description]] "Morale decreased by 2 for a day."),
	'AddEffectText', T(949084683649, --[[CharacterEffectCompositeDef Conscience_Sinful AddEffectText]] "<em><DisplayName></em> is full of remorse and lost Morale"),
	'type', "Debuff",
	'Icon', "UI/Hud/Status effects/encumbered",
	'HasFloatingText', true,
})

