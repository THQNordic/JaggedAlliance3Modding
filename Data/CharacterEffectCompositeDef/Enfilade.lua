-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Group', "_Reserve",
	'Id', "Enfilade",
	'SortKey', 2,
	'Parameters', {
		PlaceObj('PresetParamPercent', {
			'Name', "damage_bonus",
			'Value', 30,
			'Tag', "<damage_bonus>%",
		}),
	},
	'object_class', "Perk",
	'msg_reactions', {
		PlaceObj('MsgActorReaction', {
			ActorParam = "attacker",
			Event = "GatherDamageModifications",
			Handler = function (self, attacker, target, action_id, weapon, attack_args, hit_descr, mod_data)
				
				local function exec(self, attacker, target, action_id, weapon, attack_args, hit_descr, mod_data)
				if not hit_descr.aoe and attack_args.opportunity_attack_type and IsKindOf(target, "Unit") and target:HasStatusEffect("Flanked") then
					local bonus = self:ResolveValue("damage_bonus")
					mod_data.base_damage = MulDivRound(mod_data.base_damage, 100 + bonus, 100)
					mod_data.breakdown[#mod_data.breakdown + 1] = { name = self.DisplayName, value = bonus }
				end
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "GatherDamageModifications" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, attacker, target, action_id, weapon, attack_args, hit_descr, mod_data)
				end
				
				if self:VerifyReaction("GatherDamageModifications", reaction_def, attacker, attacker, target, action_id, weapon, attack_args, hit_descr, mod_data) then
					exec(self, attacker, target, action_id, weapon, attack_args, hit_descr, mod_data)
				end
			end,
			HandlerCode = function (self, attacker, target, attack_args, hit_descr, mod_data)
				if not hit_descr.aoe and attack_args.opportunity_attack_type and IsKindOf(target, "Unit") and target:HasStatusEffect("Flanked") then
					local bonus = self:ResolveValue("damage_bonus")
					mod_data.base_damage = MulDivRound(mod_data.base_damage, 100 + bonus, 100)
					mod_data.breakdown[#mod_data.breakdown + 1] = { name = self.DisplayName, value = bonus }
				end
			end,
		}),
	},
	'DisplayName', T(152999250650, --[[CharacterEffectCompositeDef Enfilade DisplayName]] "Enfilade Fire"),
	'Description', T(580006805326, --[[CharacterEffectCompositeDef Enfilade Description]] "Deal +<percent(damage_bonus)> bonus damage to Flanked enemies with Interrupt attacks."),
	'Icon', "UI/Icons/Perks/Inescapable",
})

