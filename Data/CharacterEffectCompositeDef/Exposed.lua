-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Id', "Exposed",
	'object_class', "StatusEffect",
	'msg_reactions', {
		PlaceObj('MsgReaction', {
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectAdded")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks)
				obj:RemoveStatusEffect("Protected")
				Msg("UnitMovementDone", obj)
				if not IsMerc(obj) and obj:IsUsingCover() then
					PlayVoiceResponse(obj, "AILoseCover")
				end
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks) end
				
			end,
			HandlerCode = function (self, obj, id, stacks)
				obj:RemoveStatusEffect("Protected")
				Msg("UnitMovementDone", obj)
				if not IsMerc(obj) and obj:IsUsingCover() then
					PlayVoiceResponse(obj, "AILoseCover")
				end
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectRemoved")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks, reason)
				Msg("UnitMovementDone", obj)
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks, reason) end
				
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				Msg("UnitMovementDone", obj)
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "UnitBeginTurn",
			Handler = function (self, unit)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "UnitBeginTurn")
				if not reaction_idx then return end
				
				local function exec(self, unit)
				unit:RemoveStatusEffect("Exposed")
				end
				local id = GetCharacterEffectId(self)
				
				if id then
					if IsKindOf(unit, "StatusEffectObject") and unit:HasStatusEffect(id) then
						exec(self, unit)
					end
				else
					exec(self, unit)
				end
				
			end,
			HandlerCode = function (self, unit)
				unit:RemoveStatusEffect("Exposed")
			end,
		}),
	},
	'Conditions', {
		PlaceObj('UnitIsCombatTurn', {
			Negate = true,
			TargetUnit = "current unit",
		}),
	},
	'DisplayName', T(369202486284, --[[CharacterEffectCompositeDef Exposed DisplayName]] "Exposed"),
	'Description', T(458027451938, --[[CharacterEffectCompositeDef Exposed Description]] "Lose all benefits from being in <em>Cover</em>."),
	'AddEffectText', T(427045387526, --[[CharacterEffectCompositeDef Exposed AddEffectText]] "<em><DisplayName></em> is exposed out of cover"),
	'type', "Debuff",
	'Icon', "UI/Hud/Status effects/exposed",
	'RemoveOnEndCombat', true,
	'Shown', true,
	'HasFloatingText', true,
})

