-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Id', "Burning",
	'Parameters', {
		PlaceObj('PresetParamNumber', {
			'Name', "damage",
			'Value', 15,
			'Tag', "<damage>",
		}),
	},
	'Comment', "environmental effect (fires)",
	'object_class', "CharacterEffect",
	'msg_reactions', {
		PlaceObj('MsgReaction', {
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectAdded")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks)
				if IsKindOf(obj, "Unit") then
					PlayFX("UnitBurning", "start", obj)
					obj:SetEffectValue("burning_start_time", GameTime())
					obj:AddStain("Burning", GetRandomStainSpot())
					ObjModified(obj)
				end
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks) end
				
			end,
			HandlerCode = function (self, obj, id, stacks)
				if IsKindOf(obj, "Unit") then
					PlayFX("UnitBurning", "start", obj)
					obj:SetEffectValue("burning_start_time", GameTime())
					obj:AddStain("Burning", GetRandomStainSpot())
					ObjModified(obj)
				end
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectRemoved")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") then
					PlayFX("UnitBurning", "end", obj)
					obj:SetEffectValue("burning_start_time")
					obj:ClearStains("Burning")
					ObjModified(obj)
				end
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks, reason) end
				
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") then
					PlayFX("UnitBurning", "end", obj)
					obj:SetEffectValue("burning_start_time")
					obj:ClearStains("Burning")
					ObjModified(obj)
				end
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "UnitBeginTurn",
			Handler = function (self, unit)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "UnitBeginTurn")
				if not reaction_idx then return end
				
				local function exec(self, unit)
				local chance = 50 - Max(0, unit.Health - 50) / 2 - MulDivRound(unit:GetLevel(), 25, 10)
				if unit:Random(100) < chance then
					unit:AddStatusEffect("Panicked")
				end
				end
				local id = GetCharacterEffectId(self)
				
				if id then
					if IsKindOf(unit, "StatusEffectObject") and unit:HasStatusEffect(id) then
						exec(self, unit)
					end
				else
					exec(self, unit)
				end
				
			end,
			HandlerCode = function (self, unit)
				local chance = 50 - Max(0, unit.Health - 50) / 2 - MulDivRound(unit:GetLevel(), 25, 10)
				if unit:Random(100) < chance then
					unit:AddStatusEffect("Panicked")
				end
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "UnitEndTurn",
			Handler = function (self, unit)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "UnitEndTurn")
				if not reaction_idx then return end
				
				local function exec(self, unit)
				if not unit:IsDead() then
					EnvEffectBurningTick(unit, nil, "end turn")
				end
				end
				local id = GetCharacterEffectId(self)
				
				if id then
					if IsKindOf(unit, "StatusEffectObject") and unit:HasStatusEffect(id) then
						exec(self, unit)
					end
				else
					exec(self, unit)
				end
				
			end,
			HandlerCode = function (self, unit)
				if not unit:IsDead() then
					EnvEffectBurningTick(unit, nil, "end turn")
				end
			end,
		}),
	},
	'Modifiers', {
		PlaceObj('UnitModifier', {
			mod_add = -15,
			target_prop = "Wisdom",
		}),
	},
	'DisplayName', T(178364189448, --[[CharacterEffectCompositeDef Burning DisplayName]] "Burning"),
	'Description', T(661121942943, --[[CharacterEffectCompositeDef Burning Description]] "This character may <em>Panic</em> and will <em>take <damage> damage</em> at the end of each turn until they exit the flaming area. <em>Bandage</em> can cure the effect immediately."),
	'AddEffectText', T(251545639918, --[[CharacterEffectCompositeDef Burning AddEffectText]] "<em><DisplayName></em> is on fire"),
	'type', "Debuff",
	'Icon', "UI/Hud/Status effects/burning",
	'RemoveOnSatViewTravel', true,
	'RemoveOnCampaignTimeAdvance', true,
	'Shown', true,
	'HasFloatingText', true,
})

