-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Group', "System",
	'Id', "Surprised",
	'Parameters', {
		PlaceObj('PresetParamPercent', {
			'Name', "stealthkill_modifier",
			'Value', -50,
			'Tag', "<stealthkill_modifier>%",
		}),
	},
	'object_class', "CharacterEffect",
	'msg_reactions', {
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				
				local function exec(self, obj, id, stacks)
				obj:RemoveStatusEffect("Unaware")
				if IsKindOf(obj, "Unit") and obj.command == "Idle" then
					obj:SetCommand("Idle")
				end
				ObjModified(SelectedObj)
				ObjModified("combat_bar")
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "StatusEffectAdded" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks)
				end
				
				if self:VerifyReaction("StatusEffectAdded", reaction_def, obj, obj, id, stacks) then
					exec(self, obj, id, stacks)
				end
			end,
			HandlerCode = function (self, obj, id, stacks)
				obj:RemoveStatusEffect("Unaware")
				if IsKindOf(obj, "Unit") and obj.command == "Idle" then
					obj:SetCommand("Idle")
				end
				ObjModified(SelectedObj)
				ObjModified("combat_bar")
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				
				local function exec(self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") and obj.command == "Idle" then
					obj:SetCommand("Idle")
				end
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[2]
				if not reaction_def or reaction_def.Event ~= "StatusEffectRemoved" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks, reason)
				end
				
				if self:VerifyReaction("StatusEffectRemoved", reaction_def, obj, obj, id, stacks, reason) then
					exec(self, obj, id, stacks, reason)
				end
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				if IsKindOf(obj, "Unit") and obj.command == "Idle" then
					obj:SetCommand("Idle")
				end
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "unit",
			Event = "UnitBeginTurn",
			Handler = function (self, unit)
				
				local function exec(self, unit)
				PushUnitAlert("surprise", unit)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[3]
				if not reaction_def or reaction_def.Event ~= "UnitBeginTurn" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, unit)
				end
				
				if self:VerifyReaction("UnitBeginTurn", reaction_def, unit, unit) then
					exec(self, unit)
				end
			end,
			HandlerCode = function (self, unit)
				PushUnitAlert("surprise", unit)
			end,
		}),
	},
	'Conditions', {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return not not g_Combat and IsKindOf(obj, "Unit") and not obj:IsAware() end,
		}),
	},
	'DisplayName', T(197461676465, --[[CharacterEffectCompositeDef Surprised DisplayName]] "Surprised"),
	'Description', T(877523356845, --[[CharacterEffectCompositeDef Surprised Description]] "Alerted but doesn't know what's going on. Better resistance against <em>Stealth Kills</em>. Will become fully <em>Aware</em> at the start of their next turn or when engaged by an enemy. "),
	'Icon', "UI/Hud/Status effects/surprised",
	'RemoveOnEndCombat', true,
	'Shown', true,
	'HasFloatingText', true,
})

