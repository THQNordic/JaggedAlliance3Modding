-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Group', "System",
	'Id', "Unconscious",
	'Parameters', {
		PlaceObj('PresetParamNumber', {
			'Name', "recovery_delay_turns",
			'Value', 2,
			'Tag', "<recovery_delay_turns>",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "recovery_delay_seconds",
			'Value', 10,
			'Tag', "<recovery_delay_seconds>",
		}),
	},
	'object_class', "CharacterEffect",
	'unit_reactions', {
		PlaceObj('UnitReaction', {
			Event = "OnBeginTurn",
			Handler = function (self, target)
				local recovery_turn = self:ResolveValue("recovery_turn")
				local stabilized = target:GetStatusEffect("Stabilized")
				local rally = stabilized and stabilized:ResolveValue("stabilized")
				if not rally and g_Combat and g_Combat.current_turn >= recovery_turn then
					rally = RollSkillCheck(target, "Health", 50)
				end
				if rally and target:IsDowned() then
					target:SetCommand("DownedRally")
				end
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnExplorationTick",
			Handler = function (self, target)
				local recovery = self:ResolveValue("recovery_time") 
				if not target:IsDead() and GameTime() >= recovery then
					target:SetTired(const.utExhausted)
					target:SetCommand("DownedRally")
				end
			end,
		}),
	},
	'DisplayName', T(132204403941, --[[CharacterEffectCompositeDef Unconscious DisplayName]] "Unconscious"),
	'Description', T(801008446056, --[[CharacterEffectCompositeDef Unconscious Description]] "Unconscious and unable to take any action. "),
	'AddEffectText', T(964785237678, --[[CharacterEffectCompositeDef Unconscious AddEffectText]] "<em><DisplayName></em> is unconscious"),
	'RemoveEffectText', T(208147554823, --[[CharacterEffectCompositeDef Unconscious RemoveEffectText]] "<em><DisplayName></em> regained consciousness"),
	'OnAdded', function (self, obj)
		self:SetParameter("recovery_turn", (g_Combat and g_Combat.current_turn or 1) + self:ResolveValue("recovery_delay_turns"))
		self:SetParameter("recovery_time", GameTime() + self:ResolveValue("recovery_delay_seconds") * 1000)
		obj:AddStatusEffectImmunity("Surprised", self.class)
		CreateGameTimeThread(obj.SetCommandIfNotDead, obj, obj.command == "GetDowned" and "Downed" or "KnockDown")
	end,
	'OnRemoved', function (self, obj)
		obj:RemoveStatusEffectImmunity("Surprised", self.class)
		if obj.command == "Downed" then
			obj:SetCommand("DownedRally")
		else
			obj:SetTired(Min(obj.Tiredness, const.utExhausted))
		end
	end,
	'Icon', "UI/Hud/Status effects/unconscious",
	'Shown', true,
	'ShownSatelliteView', true,
	'HasFloatingText', true,
})

