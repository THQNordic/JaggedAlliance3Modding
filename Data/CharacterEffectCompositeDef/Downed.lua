-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Group', "System",
	'Id', "Downed",
	'Comment', "replaced by BleedingOut at the start of next turn, if not treated",
	'object_class', "CharacterEffect",
	'msg_reactions', {
		PlaceObj('MsgReaction', {
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "StatusEffectAdded")
				if not reaction_idx then return end
				
				local function exec(self, obj, id, stacks)
				CombatLog("important", T{238931952182, "<em><LogName></em> is <em>downed</em>", obj})
				obj.downing_action_start_time = CombatActions_LastStartedAction and CombatActions_LastStartedAction.start_time
				CreateGameTimeThread(obj.SetCommandIfNotDead, obj, "Downed")
				end
				local _id = GetCharacterEffectId(self)
				if _id == id then exec(self, obj, id, stacks) end
				
			end,
			HandlerCode = function (self, obj, id, stacks)
				CombatLog("important", T{238931952182, "<em><LogName></em> is <em>downed</em>", obj})
				obj.downing_action_start_time = CombatActions_LastStartedAction and CombatActions_LastStartedAction.start_time
				CreateGameTimeThread(obj.SetCommandIfNotDead, obj, "Downed")
			end,
		}),
		PlaceObj('MsgReaction', {
			Event = "UnitBeginTurn",
			Handler = function (self, unit)
				local reaction_idx = table.find(self.msg_reactions or empty_table, "Event", "UnitBeginTurn")
				if not reaction_idx then return end
				
				local function exec(self, unit)
				unit:AddStatusEffect("BleedingOut")
				unit:RemoveStatusEffect("Downed")
				end
				local id = GetCharacterEffectId(self)
				
				if id then
					if IsKindOf(unit, "StatusEffectObject") and unit:HasStatusEffect(id) then
						exec(self, unit)
					end
				else
					exec(self, unit)
				end
				
			end,
			HandlerCode = function (self, unit)
				unit:AddStatusEffect("BleedingOut")
				unit:RemoveStatusEffect("Downed")
			end,
		}),
	},
	'Conditions', {
		PlaceObj('CombatIsActive', {}),
	},
	'DisplayName', T(398729743970, --[[CharacterEffectCompositeDef Downed DisplayName]] "Downed"),
	'Description', T(848972500465, --[[CharacterEffectCompositeDef Downed Description]] "This character is in <em>Critical condition</em> and will bleed out unless treated with the <em>Bandage</em> action. The character remains alive if a successful check against Health is made next turn."),
	'Icon', "UI/Hud/Status effects/bleedingout",
	'Shown', true,
})

