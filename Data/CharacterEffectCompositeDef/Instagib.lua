-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('CharacterEffectCompositeDef', {
	'Group', "Dexterity",
	'Id', "Instagib",
	'SortKey', 7,
	'Parameters', {
		PlaceObj('PresetParamPercent', {
			'Name', "marksmanshipPercent",
			'Value', 33,
			'Tag', "<marksmanshipPercent>%",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "bonusAims",
			'Value', 2,
			'Tag', "<bonusAims>",
		}),
	},
	'object_class', "Perk",
	'msg_reactions', {},
	'unit_reactions', {
		PlaceObj('UnitReaction', {
			Event = "OnBeginTurn",
			Handler = function (self, target)
				self:SetParameter("available", true)
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnUnitAttack",
			Handler = function (self, target, attacker, action, attack_target, results, attack_args)
				if target == attacker then
					self:SetParameter("available", false)
				end
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnCalcDamageAndEffects",
			Handler = function (self, target, attacker, attack_target, action, weapon, attack_args, hit, data)
				if attacker == target and self:ResolveValue("available") then
					local damageBonus = MulDivRound(attacker.Marksmanship, self:ResolveValue("marksmanshipPercent"), 100)
					data.base_damage = MulDivRound(data.base_damage, 100 + damageBonus, 100)
					data.breakdown[#data.breakdown + 1] = { name = self.DisplayName, value = damageBonus }
				end
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnCalcMaxAimActions",
			Handler = function (self, target, value, attacker, attack_target, action, weapon)
				if target == attacker and self:ResolveValue("available") then
					return value + self:ResolveValue("bonusAims")
				end
			end,
		}),
	},
	'DisplayName', T(910328508493, --[[CharacterEffectCompositeDef Instagib DisplayName]] "Sharpshooter"),
	'Description', T(557528356408, --[[CharacterEffectCompositeDef Instagib Description]] "Gain <em><bonusAims></em> possible <GameTerm('Aims')> with your <em>first attack</em> each turn.\n\nDeal <em><percent(StatPercent('Marksmanship', marksmanshipPercent))> extra </em> Damage with your <em>first attack</em> each turn (based on Marksmanship)."),
	'Icon', "UI/Icons/Perks/Instagib",
	'Tier', "Gold",
	'Stat', "Dexterity",
	'StatValue', 90,
})

