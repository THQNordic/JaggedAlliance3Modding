-- ========== GENERATED BY EventOperationOutcome Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('EventOperationOutcome', {
	Condition = function (self,operation_id,sector, mercs)
		local found = false
		ForEachSectorAround(sector.Id, 2, function(r_sector_id) 
			if #GetSectorSquadsFromSide(r_sector_id,"enemy1","enemy2")>0 then
				found = true
				return "break"
			end
		end)
		return found
	end,
	Desending = true,
	Effect = function (self,operation_id,sector, mercs)
		for _, unit in ipairs(mercs) do
			unit:AddWounds(self:ResolveValue("Wounds"))
			unit.HitPoints = Max(1, MulDivRound(unit.HitPoints, (100-self:ResolveValue("health_decrease")), 100 ))
		end
	end,
	Parameters = {
		PlaceObj('PresetParamPercent', {
			'Name', "health_decrease",
			'Value', 20,
			'Tag', "<health_decrease>%",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "wounds",
			'Value', 1,
			'Tag', "<wounds>",
		}),
	},
	PopupId = "EnemyScuffle",
	Stat = "Wisdom",
	group = "Default",
	id = "EnemyScuffle",
})

PlaceObj('EventOperationOutcome', {
	Effect = function (self,operation_id,sector, mercs)
		local min = self:ResolveValue("min_meds")
		local max = self:ResolveValue("max_meds")
		local amount = min +  InteractionRand(max - min, "EventOutcome")
		UnitGrantItem.__exec({Amount = amount,ItemId = "Meds", actor = "short"}, mercs[1] )
	end,
	Parameters = {
		PlaceObj('PresetParamNumber', {
			'Name', "min_meds",
			'Value', 15,
			'Tag', "<min_meds>",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "max_meds",
			'Value', 25,
			'Tag', "<max_meds>",
		}),
	},
	PopupId = "FoundMeds",
	Stat = "Medical",
	group = "Default",
	id = "FoundMeds",
})

PlaceObj('EventOperationOutcome', {
	Effect = function (self,operation_id,sector, mercs)
		UnitGrantItem.__exec({LootTableId = "ScoutActivityLoot", actor = "short"}, mercs[1] )
	end,
	PopupId = "FoundSupplies",
	Stat = "Explosives",
	group = "Default",
	id = "FoundSupplies",
})

PlaceObj('EventOperationOutcome', {
	Effect = function (self,operation_id,sector, mercs)
		for _, merc in ipairs(mercs) do
			merc:SetTired(const.utExhausted)--exhausted
		end
	end,
	PopupId = "Tired",
	Weight = 30,
	group = "Default",
	id = "Tired",
})

PlaceObj('EventOperationOutcome', {
	Desending = true,
	Effect = function (self,operation_id,sector, mercs)
		local unit = table.interaction_rand(mercs, "EventOutcome")
		if not unit then return end
		
		unit:AddWounds(self:ResolveValue("wounds"))
		unit.HitPoints = Max(1, MulDivRound(unit.HitPoints, (100-self:ResolveValue("health_decrease")), 100 ))
	end,
	Parameters = {
		PlaceObj('PresetParamPercent', {
			'Name', "health_decrease",
			'Value', 50,
			'Tag', "<health_decrease>%",
		}),
		PlaceObj('PresetParamNumber', {
			'Name', "wounds",
			'Value', 2,
			'Tag', "<wounds>",
		}),
	},
	PopupId = "WildAnimals",
	Stat = "Wisdom",
	group = "Default",
	id = "WildAnimals",
})

