-- ========== GENERATED BY SatelliteTimelineEventDef Editor DO NOT EDIT MANUALLY! ==========

PlaceObj('SatelliteTimelineEventDef', {
	GetAssociatedMercs = function (self,eventCtx)
		return eventCtx
	end,
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		return "UI/Icons/SateliteView/icon_ally", "UI/Icons/SateliteView/contract_expiration"
	end,
	GetMapLocation = function (self,eventCtx)
		local ud = gv_UnitData[eventCtx]
		local squadWindow = ud and g_SatelliteUI and g_SatelliteUI.squad_to_wnd and g_SatelliteUI.squad_to_wnd[ud.Squad]
		if squadWindow then
			return squadWindow:GetVisualPos()
		end
	end,
	GetTextContext = function (self,eventCtx)
		return gv_UnitData[eventCtx]
	end,
	Hint = T(610367968406, --[[SatelliteTimelineEventDef hire Hint]] "Unless the contract is renewed the merc will leave Grand Chien until hired again. You will receive a warning beforehand."),
	Text = T(700118856543, --[[SatelliteTimelineEventDef hire Text]] "<em><Nick></em>'s contract expires."),
	Title = T(504324776670, --[[SatelliteTimelineEventDef hire Title]] "Merc Contract Expires"),
	id = "hire",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetAssociatedMercs = function (self,eventCtx)
		return false
	end,
	GetDescriptionText = function (self,eventCtx)
		return T{self.Text, sector = gv_Sectors[eventCtx]}
	end,
	GetIcon = function (self,eventCtx)
		return  "UI/Icons/SateliteView/icon_ally", "UI/Icons/SateliteView/mine"
	end,
	GetMapLocation = function (self,eventCtx)
		local sector = gv_Sectors[eventCtx]
		return sector and sector.XMapPosition
	end,
	GetTextContext = function (self,eventCtx)
		return gv_Sectors[eventCtx]
	end,
	Text = T(684239601619, --[[SatelliteTimelineEventDef mine_deplete Text]] "Mine in <em><SectorName(sector)></em> is running dry and profits have started to decrease. They will continue to fall in the coming days and will eventually drop to <MinePercentAtDepleted()>%."),
	Title = T(475943446773, --[[SatelliteTimelineEventDef mine_deplete Title]] "Mine Depletion"),
	group = "Default",
	id = "mine_deplete",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetAssociatedMercs = function (self,eventCtx)
		local operationId = eventCtx.operationId
		if operationId == "Arriving" or operationId == "Idle" or operationId == "RAndR" then
			return eventCtx.uId
		end
		
		local leftSide, rightSide = false, false
		local operationPreset = SectorOperations[operationId]
		local professions = 0
		
		
		local professionId = operationPreset.Professions and operationPreset.Professions[1] and operationPreset.Professions[1].id
		if professionId then
			local perProfession = GetOperationProfessionalsGroupedByProfession(eventCtx.sectorId, operationId)
			for prof, list in sorted_pairs(perProfession) do
				local profList = {}
				local professionPreset = table.find_value(operationPreset.Professions, "id", prof)
				if professionPreset then
					profList.Name = professionPreset.display_name
				else
					profList.Name = Untranslated("Unknown Profession")
				end
				profList.List = table.map(list, "session_id")
				if professions % 2 == 0 then
					assert(not leftSide)
					leftSide = profList
				else
					rightSide = profList
				end
				professions = professions + 1
			end
			if professions > 1 then return { leftSide = leftSide, rightSide = rightSide } end
		end
		return table.map(GetOperationProfessionals(eventCtx.sectorId, operationId), "session_id")
	end,
	GetDescriptionText = function (self,eventCtx)
		local operationId = eventCtx.operationId
		local operationPreset = SectorOperations[operationId]
		local timelineDescription = operationPreset:GetTimelineEventDescription(eventCtx.sectorId, eventCtx)
		
		if operationId == "Arriving" or operationId == "Idle" or operationId == "RAndR" then -- Arriving is per unit rather than per squad
			local unitId = eventCtx.uId
			local ud = gv_UnitData[unitId]
			local squadId = ud and ud.Squad
			local squadSector = squadId and gv_Squads[squadId] and gv_Squads[squadId].CurrentSector
			
			return T{timelineDescription, Nick = ud and ud.Nick, sector = gv_Sectors[squadSector]}
		end
		
		return timelineDescription
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_ally"
		local operationPreset = SectorOperations[eventCtx.operationId]
		local innerIcon = operationPreset.icon .. "_2"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local sectorId = eventCtx.sectorId
		local sector = gv_Sectors[sectorId]
		if sector then
			return sector.XMapPosition
		end
	end,
	GetTextContext = function (self,eventCtx)
		local operationPreset = SectorOperations[eventCtx.operationId]
		return operationPreset
	end,
	OnClick = function (self,eventCtx)
		local operationPreset = SectorOperations[eventCtx.context.operationId]
		if operationPreset.group == "System Operations" then return end
		
		return T(520902754959, "Operations"), (function()
			if GetDialog("SectorOperationsUI") then return end
			InvokeShortcutAction(GetDialog("PDADialogSatellite"), "idOperations")
		end)
	end,
	SortKey = 1,
	Title = T(273697053969, --[[SatelliteTimelineEventDef operation Title]] "<display_name>"),
	id = "operation",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetAssociatedMercs = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		return squad and squad.units
	end,
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_ally"
		local sq = gv_Squads[eventCtx]
		local innerIcon = sq and GetSatelliteIconImagesSquad(sq, "ui")
		
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local squadWindow = g_SatelliteUI and g_SatelliteUI.squad_to_wnd and g_SatelliteUI.squad_to_wnd[eventCtx]
		if squadWindow then
			return squadWindow:GetVisualPos()
		end
	end,
	GetTextContext = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local destination = squad and GetSquadFinalDestination(squad.CurrentSector, squad.route)
		return SubContext(squad, { destination = destination })
	end,
	SortKey = 2,
	Text = T(190763865430, --[[SatelliteTimelineEventDef travel Text]] "<em><u(Name)></em> will reach <em><SectorId(destination)></em>."),
	Title = T(378806406154, --[[SatelliteTimelineEventDef travel Title]] "Destination Reached"),
	id = "travel",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetDescriptionText = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local shipmentPresetId = squad and squad.shipment_preset_id or "DiamondShipment"
		local preset = shipmentPresetId and ShipmentPresets[shipmentPresetId]
		if preset then
			return preset.TimelineEventText, preset.TimelineEventTitle, preset.TimelineEventHint
		end
		
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local shipmentPresetId = squad and squad.shipment_preset_id
		local preset = shipmentPresetId and ShipmentPresets[shipmentPresetId]
		local icon = "UI/Icons/SateliteView/icon_enemy"
		local innerIcon = preset and preset.icon or "UI/Icons/SateliteView/diamond_shipments"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local squadWindow = g_SatelliteUI and g_SatelliteUI.squad_to_wnd and g_SatelliteUI.squad_to_wnd[eventCtx]
		if squadWindow then
			return squadWindow:GetVisualPos()
		end
	end,
	GetTextContext = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local destination = squad and GetSquadFinalDestination(squad.CurrentSector, squad.route)
		return SubContext(squad, { destination = destination })
	end,
	SortKey = 3,
	id = "diamond-travel",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_enemy"
		local innerIcon = "UI/Icons/SateliteView/guard_post"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local sector = gv_Sectors[eventCtx]
		return sector and sector.XMapPosition
	end,
	GetTextContext = function (self,eventCtx)
		local guardpost = gv_Sectors[eventCtx].guardpost_obj
		return { source = eventCtx, dest = guardpost and guardpost.target_sector_id }
	end,
	SortKey = 4,
	Text = T(914629748470, --[[SatelliteTimelineEventDef guardpost Text]] "The enemy outpost on sector <em><SectorId(source)></em> will attack <em><SectorId(dest)></em>."),
	Title = T(860913455162, --[[SatelliteTimelineEventDef guardpost Title]] "Outpost Attack"),
	id = "guardpost",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_enemy"
		local innerIcon = "UI/Icons/SateliteView/enemy_logo"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local squadWindow = g_SatelliteUI and g_SatelliteUI.squad_to_wnd and g_SatelliteUI.squad_to_wnd[eventCtx]
		if squadWindow then
			return squadWindow:GetVisualPos()
		end
	end,
	GetTextContext = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local destination = squad and GetSquadFinalDestination(squad.CurrentSector, squad.route)
		local ud = gv_UnitData[eventCtx]
		local operationPreset = ud and SectorOperations[ud.Operation]
		return SubContext(squad, { destination = destination })
	end,
	SortKey = 5,
	Text = T(738795501483, --[[SatelliteTimelineEventDef guardpost-travel Text]] "The enemy squad will reach <em><SectorId(destination)></em>."),
	Title = T(982716870525, --[[SatelliteTimelineEventDef guardpost-travel Title]] "Outpost Attack"),
	id = "guardpost-travel",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_enemy"
		local innerIcon = "UI/Icons/SateliteView/enemy_logo"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local squadWindow = g_SatelliteUI and g_SatelliteUI.squad_to_wnd and g_SatelliteUI.squad_to_wnd[eventCtx]
		if squadWindow then
			return squadWindow:GetVisualPos()
		end
	end,
	GetTextContext = function (self,eventCtx)
		local squad = gv_Squads[eventCtx]
		local destination = squad and GetSquadFinalDestination(squad.CurrentSector, squad.route)
		local ud = gv_UnitData[eventCtx]
		local operationPreset = ud and SectorOperations[ud.Operation]
		return SubContext(squad, { destination = destination })
	end,
	SortKey = 5,
	Text = T(459713580879, --[[SatelliteTimelineEventDef squad-attack Text]] "The enemy squad will reach <em><SectorId(destination)></em>."),
	Title = T(366163411879, --[[SatelliteTimelineEventDef squad-attack Title]] "Squad Attack"),
	id = "squad-attack",
})

PlaceObj('SatelliteTimelineEventDef', {
	GetDescriptionText = function (self,eventCtx)
		return self.Text, self.Title, self.Hint
	end,
	GetIcon = function (self,eventCtx)
		local icon = "UI/Icons/SateliteView/icon_enemy"
		local innerIcon = "UI/Icons/SateliteView/port"
		return icon, innerIcon
	end,
	GetMapLocation = function (self,eventCtx)
		local sector = gv_Sectors.K9
		return sector and sector.XMapPosition
	end,
	SortKey = 6,
	Text = T(120699512646, --[[SatelliteTimelineEventDef NNight Text]] "Operation N-Night will be executed on sector <em><SectorId('K9')></em>."),
	Title = T(891146386915, --[[SatelliteTimelineEventDef NNight Title]] "Operation N-Night"),
	id = "NNight",
})

