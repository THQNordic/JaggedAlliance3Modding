-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

UndefineClass('SidneyPerkBuff')
DefineClass.SidneyPerkBuff = {
	__parents = { "CharacterEffect" },
	__generated_by_class = "CharacterEffectCompositeDef",


	object_class = "CharacterEffect",
	msg_reactions = {
		PlaceObj('MsgActorReaction', {
			ActorParam = "attacker",
			Event = "AttackMiss",
			Handler = function (self, attacker, target)
				
				local function exec(self, attacker, target)
				attacker:RemoveStatusEffect(self.id)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "AttackMiss" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, attacker, target)
				end
				
				if self:VerifyReaction("AttackMiss", reaction_def, attacker, attacker, target) then
					exec(self, attacker, target)
				end
			end,
			HandlerCode = function (self, attacker, target)
				attacker:RemoveStatusEffect(self.id)
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "target",
			Event = "DamageTaken",
			Handler = function (self, attacker, target, dmg, hit_descr)
				
				local function exec(self, attacker, target, dmg, hit_descr)
				target:RemoveStatusEffect(self.id)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[2]
				if not reaction_def or reaction_def.Event ~= "DamageTaken" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, attacker, target, dmg, hit_descr)
				end
				
				if self:VerifyReaction("DamageTaken", reaction_def, target, attacker, target, dmg, hit_descr) then
					exec(self, attacker, target, dmg, hit_descr)
				end
			end,
			HandlerCode = function (self, attacker, target, dmg, hit_descr)
				target:RemoveStatusEffect(self.id)
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "unit",
			Event = "UnitBeginTurn",
			Handler = function (self, unit)
				
				local function exec(self, unit)
				local ap = CharacterEffectDefs.SidneyPerk:ResolveValue("APBuff") * const.Scale.AP
				unit:GainAP(ap)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[3]
				if not reaction_def or reaction_def.Event ~= "UnitBeginTurn" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, unit)
				end
				
				if self:VerifyReaction("UnitBeginTurn", reaction_def, unit, unit) then
					exec(self, unit)
				end
			end,
			HandlerCode = function (self, unit)
				local ap = CharacterEffectDefs.SidneyPerk:ResolveValue("APBuff") * const.Scale.AP
				unit:GainAP(ap)
			end,
		}),
	},
	DisplayName = T(117305609925, --[[CharacterEffectCompositeDef SidneyPerkBuff DisplayName]] "Smug"),
	Description = T(476004933629, --[[CharacterEffectCompositeDef SidneyPerkBuff Description]] "<em>Increased maximum AP</em>.\n\nThe effect is lost after taking <em>Damage</em> or <em>missing</em> with an attack."),
	Icon = "UI/Hud/Status effects/sidney_perk_buff",
	RemoveOnEndCombat = true,
	Shown = true,
	HasFloatingText = true,
}

