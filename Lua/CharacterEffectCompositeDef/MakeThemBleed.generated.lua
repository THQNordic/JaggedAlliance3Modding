-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

UndefineClass('MakeThemBleed')
DefineClass.MakeThemBleed = {
	__parents = { "Perk" },
	__generated_by_class = "CharacterEffectCompositeDef",


	object_class = "Perk",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OnUnitAttack",
			Handler = function (self, target, attacker, action, attack_target, results, attack_args)
				if target == attacker then
					local kills = #(results.killed_units or empty_table)
					if kills > 0 then
						attacker:AddToInventory("Trophy", kills)
					end
				end
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnCalcDamageAndEffects",
			Handler = function (self, target, attacker, attack_target, action, weapon, attack_args, hit, data)
				if target ~= attacker then return end
				
				if IsKindOf(attack_target, "Unit") and (attack_target.species ~= "Human" or attack_args.target_spot_group == "Groin") then
					data.effects[#data.effects + 1] = "Bleeding"
				end
				
				local enemiesInSight = GetTargetsToShowInPartyUI(attacker)
				local damagePerBleed = self:ResolveValue("damagePerBleed")
				local maxStacks = self:ResolveValue("maxStacks")			
				local stacks = 0
				for _, unit in ipairs(enemiesInSight) do
					if unit:HasStatusEffect("Bleeding") then
						stacks = stacks + 1
					end
				end
				stacks = Min(stacks, maxStacks)
								
				local damageBonus = stacks * damagePerBleed
				data.base_damage = MulDivRound(data.base_damage, 100 + damageBonus, 100)
				data.breakdown[#data.breakdown + 1] = { name = self.DisplayName, value = damageBonus }
			end,
		}),
	},
	DisplayName = T(684856115226, --[[CharacterEffectCompositeDef MakeThemBleed DisplayName]] "Make Them Bleed"),
	Description = T(303090649638, --[[CharacterEffectCompositeDef MakeThemBleed Description]] "<em>Bonus damage</em> for each <GameTerm('Bleeding')> enemy in sight.\n\n<em>Groin attacks</em> and attacks against <em>animals</em> inflict <GameTerm('Bleeding')>."),
	Icon = "UI/Icons/Perks/MakeThemBleed",
	Tier = "Personal",
}

