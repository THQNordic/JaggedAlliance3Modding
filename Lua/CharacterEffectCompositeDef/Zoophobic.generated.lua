-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

UndefineClass('Zoophobic')
DefineClass.Zoophobic = {
	__parents = { "Perk" },
	__generated_by_class = "CharacterEffectCompositeDef",


	object_class = "Perk",
	msg_reactions = {
		PlaceObj('MsgActorReaction', {
			ActorParam = "target",
			Event = "OnAttack",
			Handler = function (self, attacker, action, target, results, attack_args)
				
				local function exec(self, attacker, action, target, results, attack_args)
				if attacker.species ~= "Human" and not results.miss and not target:HasStatusEffect("ZoophobiaChecked") then
					CombatLog("debug", T{Untranslated("<em>Zoophobic</em> proc on <unit>"), unit = target.Name})
					target:AddStatusEffect("ZoophobiaChecked")
				end
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "OnAttack" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, attacker, action, target, results, attack_args)
				end
				
				if self:VerifyReaction("OnAttack", reaction_def, target, attacker, action, target, results, attack_args) then
					exec(self, attacker, action, target, results, attack_args)
				end
			end,
			HandlerCode = function (self, attacker, action, target, results, attack_args)
				if attacker.species ~= "Human" and not results.miss and not target:HasStatusEffect("ZoophobiaChecked") then
					CombatLog("debug", T{Untranslated("<em>Zoophobic</em> proc on <unit>"), unit = target.Name})
					target:AddStatusEffect("ZoophobiaChecked")
				end
			end,
			helpActor = "target",
		}),
	},
	DisplayName = T(619689762390, --[[CharacterEffectCompositeDef Zoophobic DisplayName]] "Zoophobic"),
	Description = T(467565005573, --[[CharacterEffectCompositeDef Zoophobic Description]] "Loses <GameTerm('Morale')> when <em>Attacked</em> by an <em>animal</em>."),
	Icon = "UI/Icons/Perks/Zoophobic",
	Tier = "Quirk",
}

