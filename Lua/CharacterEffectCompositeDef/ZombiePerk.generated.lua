-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

UndefineClass('ZombiePerk')
DefineClass.ZombiePerk = {
	__parents = { "Perk" },
	__generated_by_class = "CharacterEffectCompositeDef",


	object_class = "Perk",
	msg_reactions = {
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				
				local function exec(self, obj, id, stacks)
				obj:AddStatusEffectImmunity("Suppressed", id)
				obj:AddStatusEffectImmunity("Bleeding", id)
				obj:AddStatusEffectImmunity("Inaccurate", id)
				obj:AddStatusEffectImmunity("Flanked", id)
				obj:AddStatusEffectImmunity("SuppressionChangeStance", id)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "StatusEffectAdded" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks)
				end
				
				if self:VerifyReaction("StatusEffectAdded", reaction_def, obj, obj, id, stacks) then
					exec(self, obj, id, stacks)
				end
			end,
			HandlerCode = function (self, obj, id, stacks)
				obj:AddStatusEffectImmunity("Suppressed", id)
				obj:AddStatusEffectImmunity("Bleeding", id)
				obj:AddStatusEffectImmunity("Inaccurate", id)
				obj:AddStatusEffectImmunity("Flanked", id)
				obj:AddStatusEffectImmunity("SuppressionChangeStance", id)
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				
				local function exec(self, obj, id, stacks, reason)
				obj:RemoveStatusEffectImmunity("Suppressed", id)
				obj:RemoveStatusEffectImmunity("Bleeding", id)
				obj:RemoveStatusEffectImmunity("Inaccurate", id)
				obj:RemoveStatusEffectImmunity("Flanked", id)
				obj:RemoveStatusEffectImmunity("SuppressionChangeStance", id)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[2]
				if not reaction_def or reaction_def.Event ~= "StatusEffectRemoved" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks, reason)
				end
				
				if self:VerifyReaction("StatusEffectRemoved", reaction_def, obj, obj, id, stacks, reason) then
					exec(self, obj, id, stacks, reason)
				end
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				obj:RemoveStatusEffectImmunity("Suppressed", id)
				obj:RemoveStatusEffectImmunity("Bleeding", id)
				obj:RemoveStatusEffectImmunity("Inaccurate", id)
				obj:RemoveStatusEffectImmunity("Flanked", id)
				obj:RemoveStatusEffectImmunity("SuppressionChangeStance", id)
			end,
		}),
	},
	DisplayName = T(725879214066, --[[CharacterEffectCompositeDef ZombiePerk DisplayName]] "Infected"),
	Description = T(141568768521, --[[CharacterEffectCompositeDef ZombiePerk Description]] "Immune to Suppressed, Bleeding, Inaccurate, and Flanked."),
	Icon = "UI/Hud/Status effects/stabilized",
	Shown = true,
}

