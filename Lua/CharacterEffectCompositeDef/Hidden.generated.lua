-- ========== GENERATED BY CharacterEffectCompositeDef Editor DO NOT EDIT MANUALLY! ==========

UndefineClass('Hidden')
DefineClass.Hidden = {
	__parents = { "CharacterEffect" },
	__generated_by_class = "CharacterEffectCompositeDef",


	object_class = "CharacterEffect",
	msg_reactions = {
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectAdded",
			Handler = function (self, obj, id, stacks)
				
				local function exec(self, obj, id, stacks)
				-- remove unit from Revealed tables (visible until end of turn mechanic, NOT Revealed status)
				for team, tbl in pairs(g_RevealedUnits) do
					table.remove_value(tbl, obj)
				end
				Msg("UnitStealthChanged", obj) -- this will invalidate visibility and apply the removed reveals automatically
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[1]
				if not reaction_def or reaction_def.Event ~= "StatusEffectAdded" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks)
				end
				
				if self:VerifyReaction("StatusEffectAdded", reaction_def, obj, obj, id, stacks) then
					exec(self, obj, id, stacks)
				end
			end,
			HandlerCode = function (self, obj, id, stacks)
				-- remove unit from Revealed tables (visible until end of turn mechanic, NOT Revealed status)
				for team, tbl in pairs(g_RevealedUnits) do
					table.remove_value(tbl, obj)
				end
				Msg("UnitStealthChanged", obj) -- this will invalidate visibility and apply the removed reveals automatically
			end,
		}),
		PlaceObj('MsgActorReaction', {
			ActorParam = "obj",
			Event = "StatusEffectRemoved",
			Handler = function (self, obj, id, stacks, reason)
				
				local function exec(self, obj, id, stacks, reason)
				if g_Combat and IsKindOf(obj, "Unit") then
					-- check if visible to any enemies
					for _, team in ipairs(g_Teams) do
						if team:IsEnemySide(obj.team) and HasVisibilityTo(team, obj) then				
							obj:RevealTo(team)
						end
					end
				end
				Msg("UnitStealthChanged", obj)
				end
				
				if not IsKindOf(self, "MsgReactionsPreset") then return end
				
				local reaction_def = (self.msg_reactions or empty_table)[2]
				if not reaction_def or reaction_def.Event ~= "StatusEffectRemoved" then return end
				
				if not IsKindOf(self, "MsgActorReactionsPreset") then
					exec(self, obj, id, stacks, reason)
				end
				
				if self:VerifyReaction("StatusEffectRemoved", reaction_def, obj, obj, id, stacks, reason) then
					exec(self, obj, id, stacks, reason)
				end
			end,
			HandlerCode = function (self, obj, id, stacks, reason)
				if g_Combat and IsKindOf(obj, "Unit") then
					-- check if visible to any enemies
					for _, team in ipairs(g_Teams) do
						if team:IsEnemySide(obj.team) and HasVisibilityTo(team, obj) then				
							obj:RevealTo(team)
						end
					end
				end
				Msg("UnitStealthChanged", obj)
			end,
		}),
	},
	DisplayName = T(529131675951, --[[CharacterEffectCompositeDef Hidden DisplayName]] "Hidden"),
	Description = T(298232269359, --[[CharacterEffectCompositeDef Hidden Description]] "This character is harder to detect by enemies. Allows <em>Stealth Kill</em> attacks against enemies."),
	Icon = "UI/Hud/Status effects/hidden",
	RemoveOnSatViewTravel = true,
	Shown = true,
	HasFloatingText = true,
}

