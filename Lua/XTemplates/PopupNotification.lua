-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "XDialog",
	group = "Zulu",
	id = "PopupNotification",
	PlaceObj('XTemplateTemplate', {
		'__template', "PopupNotificationBaseTemplate",
	}, {
		PlaceObj('XTemplateFunc', {
			'name', "SetSelectedHint(self, hint)",
			'func', function (self, hint)
				local hintScroll = self.idHintScroll
				if not hint then
					hint = hintScroll.context[#hintScroll.context]
				elseif type(hint) == "string" then
					hint = table.find_value(hintScroll.context, "id", hint)
				end
				
				if not hint then
					self.idText:SetText()
					return
				 end
				
				local selectedWnd = false
				for i, hintWnd in ipairs(hintScroll) do
					if hintWnd.SetStyle then
						local selected = hintWnd.context == hint
						if selected then 
							selectedWnd = hintWnd
							if not next(hintScroll.selection) then
								hintScroll:SetSelection(i)
							end
						end
						hintWnd:SetStyle(selected and "selected" or "default")
					end
				end
				hintScroll:ScrollIntoView(selectedWnd)
				
				if not TutorialHintsState.read then TutorialHintsState.read = {} end
				TutorialHintsState.read[hint.preset.id] = true
				local popupPreset = hint.popupPreset
				if popupPreset then
					if #(popupPreset.Image or "") > 0 then
						self.idNotificationImage:SetImage(popupPreset.Image)
					else
						self.idNotificationImage:SetImage("UI/Messages/message_placeholder")
					end
					self.idText:SetText(GetUIStyleGamepad() and popupPreset.GamepadText or popupPreset.Text)
				end
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "IsHintRead(self, hint)",
			'func', function (self, hint)
				return TutorialIsHintRead(hint)
			end,
		}),
		}),
})

