-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "SatelliteConflictSquadsAndMercsClass",
	group = "Zulu Satellite UI",
	id = "SatelliteConflictSquadsAndMercs",
	PlaceObj('XTemplateWindow', {
		'__class', "SatelliteConflictSquadsAndMercsClass",
		'Id', "idMercs",
		'Padding', box(0, 30, 0, 30),
		'MinWidth', 498,
		'MaxWidth', 498,
		'LayoutMethod', "VList",
		'LayoutVSpacing', 30,
		'ContextUpdateOnOpen', true,
	}, {
		PlaceObj('XTemplateForEach', {
			'__context', function (parent, context, item, i, n) return item end,
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'Padding', box(10, 0, 10, 0),
				'LayoutMethod', "VList",
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					local is_squad_defeated = SatelliteConflict_IsSquadDefeated(context)
					self:ResolveId("idName"):SetContext(SubContext(context,{defeated = is_squad_defeated}), true)
					local sq_image= self:ResolveId("idSquadImage")
					sq_image:SetContext(context, true)
					-- are all squad dead
					local logo = self:ResolveId("idLogo")
					logo:SetEnabled(not is_squad_defeated)
					if context.militia then
						logo[1]:SetImage("")
						sq_image:SetScaleModifier(point(1000, 1000))
						sq_image:SetMargins(box(0,0,0,0))
					end
				end,
			}, {
				PlaceObj('XTemplateWindow', {
					'__class', "XContextWindow",
					'Id', "idTitle",
					'VAlign', "top",
				}, {
					PlaceObj('XTemplateWindow', {
						'__class', "XText",
						'Id', "idName",
						'Padding', box(4, 2, 2, 2),
						'Dock', "left",
						'HandleMouse', false,
						'TextStyle', "ConflictSquadName",
						'OnContextUpdate', function (self, context, ...)
							local dlg_context = GetDialog(self).context
							local squadName = context.militia and T(977391598484, "Militia") or Untranslated(context.Name)
							local color = TLookupTag("<GameColorJ>")
							if dlg_context.autoResolve then
								if context.defeated then
									self:SetText(color..T{611090141279, "<squadName> <style ConflictSquadNamePosition>/ killed in action</style>", squadName = squadName})
								else
									self:SetText(color..squadName)						
								end
							else															
								self:SetText(color..T{484322448915, "<squadName> <style ConflictSquadNamePosition>/ in sector</style>", squadName = squadName})							
							end	
							XContextControl.OnContextUpdate(self, context)								
						end,
						'Translate', true,
						'Text', T(929058176410, --[[XTemplate SatelliteConflictSquadsAndMercs Text]] "<GameColorJ><u(Name)>"),
						'WordWrap', false,
					}),
					PlaceObj('XTemplateWindow', {
						'__class', "XFrame",
						'Margins', box(5, 0, 0, 0),
						'BorderWidth', 1,
						'VAlign', "center",
						'Image', "UI/PDA/separate_line_vertical",
						'FrameBox', box(3, 3, 3, 3),
						'TileFrame', true,
					}),
					}),
				PlaceObj('XTemplateWindow', {
					'comment', "Mercs Themselves (Updates on Sel Squad Change)",
					'__class', "XContentTemplate",
					'Id', "idParty",
					'IdNode', false,
					'HandleMouse', true,
				}, {
					PlaceObj('XTemplateWindow', {
						'GridStretchX', false,
						'GridStretchY', false,
						'LayoutMethod', "HList",
					}, {
						PlaceObj('XTemplateWindow', {
							'__class', "XControl",
							'Id', "idLogo",
							'IdNode', false,
							'Margins', box(0, 10, 4, 0),
						}, {
							PlaceObj('XTemplateWindow', {
								'comment', "logo background",
								'__class', "XImage",
								'VAlign', "top",
								'Image', "UI/Icons/SateliteView/merc_squad",
								'DisabledImageColor', RGBA(130, 128, 120, 255),
							}),
							PlaceObj('XTemplateWindow', {
								'comment', "logo",
								'__class', "XContextImage",
								'Id', "idSquadImage",
								'HAlign', "center",
								'VAlign', "top",
								'Image', "UI/Icons/SquadLogo/squad_logo_01_s.png",
								'ImageColor', RGBA(230, 222, 202, 255),
								'DisabledImageColor', RGBA(130, 128, 120, 255),
								'OnContextUpdate', function (self, context, ...)
									if context.militia then
										self:SetImage("UI/Icons/SateliteView/militia")
									else
										self:SetImage( context.image.."_s")
										self:SetScaleModifier(point(840,840))
									end
								end,
							}),
							}),
						PlaceObj('XTemplateWindow', {
							'__condition', function (parent, context) return not context.militia end,
							'LayoutMethod', "HList",
							'LayoutHSpacing', 8,
						}, {
							PlaceObj('XTemplateForEach', {
								'comment', "mercs",
								'array', function (parent, context) return GetDialog(parent).context.autoResolve and table.find_value(GetDialog(parent).context.allySquads, "UniqueId", context.UniqueId).units or context.units end,
								'__context', function (parent, context, item, i, n) return gv_UnitData[item] end,
								'run_after', function (child, context, item, i, n, last)
									if context:IsDead() then
										child.idName:SetText(Untranslated("<center>")..TLookupTag("<GameColorI>")..T(617663398594, "K.I.A."))	
									end
								end,
							}, {
								PlaceObj('XTemplateTemplate', {
									'__context', function (parent, context) return context end,
									'__template', "HUDMerc",
									'ScaleModifier', point(750, 750),
									'HandleMouse', false,
									'ChildrenHandleMouse', false,
									'OnContextUpdate', function (self, context, ...)
										self.idLevelUp:SetVisible(false)
									end,
								}),
								}),
							}),
						PlaceObj('XTemplateWindow', {
							'__condition', function (parent, context) return context.militia end,
							'LayoutMethod', "HList",
							'LayoutHSpacing', 8,
						}, {
							PlaceObj('XTemplateForEach', {
								'comment', "militia",
								'array', function (parent, context)
									local squad = GetDialog(parent).context.autoResolve and table.find_value(GetDialog(parent).context.allySquads, "UniqueId", context.UniqueId) or context  
									return GroupEnemyMercs({squad}, "separateDead")
								end,
								'__context', function (parent, context, item, i, n) return item end,
								'run_after', function (child, context, item, i, n, last)
									child.idName:SetText(context.DisplayName)	
									
									if context.count and context.count>1 then
										child.idName:SetTextHAlign("center")
										local color = context.is_dead and GameColors.F or GameColors.J 
										child.idBottomPart[1]:SetBackground(color)										
										--child.idName.scale = point(1000,1000)
									
										child.idName:SetScaleModifier(point(1333,1333))
										child.idBottomPart:SetMinHeight(0)
										child.idName:SetTextStyle("PDAMercNameCard_Large")
										child.idName:SetPadding(box(0,-2,0,-2))
										child.idName:SetText(Untranslated(context.count))	
									end
									--child:SetEnabled(not context.is_dead)
								end,
							}, {
								PlaceObj('XTemplateTemplate', {
									'__template', "HUDMerc",
									'RolloverTemplate', "SmallRolloverLine",
									'RolloverAnchor', "center-bottom",
									'RolloverAnchorId', "idPortraitBG",
									'RolloverText', T(831801658535, --[[XTemplate SatelliteConflictSquadsAndMercs RolloverText]] "<DisplayName>"),
									'ScaleModifier', point(750, 750),
									'ChildrenHandleMouse', false,
								}),
								}),
							}),
						}),
					}),
				}),
			}),
		}),
})

