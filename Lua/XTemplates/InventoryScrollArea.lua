-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "XScrollArea",
	group = "Zulu",
	id = "InventoryScrollArea",
	PlaceObj('XTemplateWindow', {
		'__class', "XScrollArea",
		'LayoutMethod', "VList",
		'LayoutVSpacing', 10,
	}, {
		PlaceObj('XTemplateFunc', {
			'name', "OnXButtonRepeat(self, button, controler_id)",
			'func', function (self, button, controler_id)
				--print("container repeat", button)
				local pt = GamepadMouseGetPos()
				local button = GetInvertPDAThumbsShortcut(button)
				if button=="RightThumbUp" or button=="RightThumbUpLeft" or button=="RightThumbUpRight"   then
					self:SetMouseWheelStep(self.MouseWheelStep + 30)
					return self:OnMouseWheelForward(pt)	
				elseif  button=="RightThumbDown"  or button=="RightThumbDownLeft" or button=="RightThumbDownRight"   then
					self:SetMouseWheelStep(self.MouseWheelStep + 30)
					return self:OnMouseWheelBack(pt)
				end
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnXButtonDown(self, button, controler_id)",
			'func', function (self, button, controler_id)
				local button = GetInvertPDAThumbsShortcut(button)
				if button=="RightThumbUp" or button=="RightThumbUpLeft" or button=="RightThumbUpRight"   then
					return self:OnMouseWheelForward()	
				elseif  button=="RightThumbDown"  or button=="RightThumbDownLeft" or button=="RightThumbDownRight"   then
					return self:OnMouseWheelBack()
				end
				return XScrollArea.OnXButtonDown(self, button, controler_id)
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnXButtonUp(self, button, controler_id)",
			'func', function (self, button, controler_id)
				local button = GetInvertPDAThumbsShortcut(button)
				if     button=="RightThumbUp" or button=="RightThumbUpLeft" or button=="RightThumbUpRight"   
				  or  button=="RightThumbDown"  or button=="RightThumbDownLeft" or button=="RightThumbDownRight"   then
					self:SetMouseWheelStep(80)
				end
				return XScrollArea.OnXButtonUp(self, button, controler_id)
			end,
		}),
		}),
})

