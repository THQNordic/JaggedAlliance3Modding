-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__content = function (parent, context)
		return parent
	end,
	__is_kind_of = "XDialog",
	group = "BobbyRayGunsShop",
	id = "PDABrowserBobbyRay_Order",
	PlaceObj('XTemplateWindow', {
		'comment', "Full page",
		'__context', function (parent, context)
			return context
		end,
		'__class', "XDialog",
		'Id', "PDABrowserBobbyRay_Order",
		'LayoutMethod', "VList",
		'HandleMouse', true,
		'MouseCursor', "UI/Cursors/Pda_Cursor.tga",
	}, {
		PlaceObj('XTemplateFunc', {
			'name', "Open(self,...)",
			'func', function (self,...)
				NetSyncEvent("SetBobbyRayOrderFormOpened", GetBobbyRayOrderFormOpenId(), true)
				
				XDialog.Open(self,...)
				PDABrowserTabState["bobby_ray_shop"].mode_param = "cart"
				PauseCampaignTime(GetUICampaignPauseReason("PDABrowserBobbyRay_Order"))
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnDelete",
			'func', function (self, ...)
				NetSyncEvent("SetBobbyRayOrderFormOpened", GetBobbyRayOrderFormOpenId(), false)
				ResumeCampaignTime(GetUICampaignPauseReason("PDABrowserBobbyRay_Order"))
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "Rebuild(self)",
			'func', function (self)
				self:ResolveId("idDeliveryTotalCost"):OnContextUpdate()
				self:ResolveId("idDeliveryMessage"):OnContextUpdate()
				
				self:ResolveId("idButtonAccept"):OnContextUpdate()
				self:ResolveId("idButtonClear"):OnContextUpdate()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idScrollUp",
			'ActionGamepad', "RightThumbUp",
			'OnAction', function (self, host, source, ...)
				local scrollbar = host:ResolveId("idSectorList")
				if not scrollbar then return end
				scrollbar:ScrollUp()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idScrollDown",
			'ActionGamepad', "RightThumbDown",
			'OnAction', function (self, host, source, ...)
				local scrollbar = host:ResolveId("idSectorList")
				if not scrollbar then return end
				scrollbar:ScrollDown()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "The secondary shortcut is so that both can work",
			'ActionId', "idShop",
			'ActionShortcut2', "ButtonB",
			'ActionGamepad', "LeftShoulder",
			'OnAction', function (self, host, source, ...)
				GetPDABrowserDialog():SetMode("bobby_ray_shop", "store")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idClearOrder",
			'ActionGamepad', "LeftThumbClick",
			'ActionState', function (self, host)
				return (table.count(BobbyRayCartGetUnits()) > 0 or BobbyRayCartGetDefaultDeliveryOption() ~= BobbyRayCartGetDeliveryOption() or BobbyRayCartGetDeliverySector() ~= BobbyRayGetDefaultDeliverySector()) and "enabled" or "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("CreateTimerBeforeAction", "clear-order")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idAcceptOrder",
			'ActionGamepad', "RightShoulder",
			'ActionState', function (self, host)
				local count, cost = BobbyRayCartGetAggregate()
				local hasEnough = cost <= Game.Money
											
				if hasEnough and count ~= 0 and BobbyRayCartGetDeliveryOption() and BobbyRayCartGetDeliverySector() then
					return "enabled"
				end
				
				return "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("CreateTimerBeforeAction", "finish-order")
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'comment', "observer for g_BobbyRayCart changes",
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextControl",
			'Visible', false,
			'FoldWhenHidden', true,
			'OnContextUpdate', function (self, context, ...)
				self.parent:Rebuild()
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'comment', "observer for playerMoneyChanges",
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextControl",
			'Visible', false,
			'FoldWhenHidden', true,
			'OnContextUpdate', function (self, context, ...)
				self.parent:Rebuild()
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'comment', "Background",
			'__class', "XImage",
			'Dock', "box",
			'Image', "UI/PDA/WEBSites/bobby_rays_background",
			'ImageFit', "stretch",
		}),
		PlaceObj('XTemplateWindow', {
			'comment', "PageSpecific",
			'__class', "XImage",
			'IdNode', false,
			'Dock', "box",
			'HAlign', "center",
			'VAlign', "center",
			'Image', "UI/PDA/WEBSites/Bobby Rays/shop_background",
			'ImageScale', point(1015, 1015),
		}, {
			PlaceObj('XTemplateWindow', {
				'Padding', box(46, 25, 46, 31),
				'Background', RGBA(187, 0, 255, 0),
			}, {
				PlaceObj('XTemplateWindow', {
					'comment', "Top",
					'Padding', box(0, 10, 0, 5),
					'Dock', "top",
					'Background', RGBA(61, 255, 0, 0),
				}, {
					PlaceObj('XTemplateWindow', {
						'__class', "XImage",
						'Id', "idLogo",
						'HAlign', "center",
						'HandleMouse', true,
						'Image', "UI/PDA/WEBSites/Bobby Rays/logo_big",
					}, {
						PlaceObj('XTemplateFunc', {
							'name', "OnMouseButtonDown(self, pos, button)",
							'func', function (self, pos, button)
								if button == "L" then
									GetPDABrowserDialog():SetMode("bobby_ray_shop", "front")
								end
							end,
						}),
						}),
					PlaceObj('XTemplateWindow', {
						'__class', "XText",
						'Id', "idLeftTitle",
						'Padding', box(0, 0, 0, 5),
						'Dock', "left",
						'TextStyle', "PDABobbyStore_HG24E_Glow",
						'Translate', true,
						'Text', T(959495600025, --[[XTemplate PDABrowserBobbyRay_Order Text]] "ORDER FORM"),
						'TextVAlign', "bottom",
					}),
					PlaceObj('XTemplateWindow', {
						'__class', "XText",
						'Id', "idRightTitle",
						'Padding', box(0, 0, 0, 5),
						'Dock', "right",
						'TextStyle', "PDABobbyStore_HG24E_Glow",
						'Translate', true,
						'Text', T(525706777798, --[[XTemplate PDABrowserBobbyRay_Order Text]] "DELIVER TO"),
						'TextVAlign', "bottom",
					}),
					}),
				PlaceObj('XTemplateWindow', {
					'comment', "PageContent",
					'VAlign', "top",
					'MinWidth', 1034,
					'MinHeight', 678,
					'MaxWidth', 1034,
					'MaxHeight', 678,
					'HandleKeyboard', false,
				}, {
					PlaceObj('XTemplateWindow', {
						'Id', "idCart",
						'Dock', "left",
						'MinWidth', 678,
						'MaxWidth', 678,
					}, {
						PlaceObj('XTemplateWindow', {
							'Dock', "top",
						}, {
							PlaceObj('XTemplateWindow', {
								'comment', "overlay at the top to get around visual artifacts",
								'__class', "XFrame",
								'Id', "idCartFrameFixTop",
								'ZOrder', 6,
								'Image', "UI/PDA/WEBSites/Bobby Rays/frame_top_line.png",
								'FrameBox', box(7, 7, 7, 0),
							}),
							PlaceObj('XTemplateWindow', {
								'comment', "overlay on the right to get around visual artifacts",
								'__class', "XFrame",
								'Id', "idCartFrameFixRight",
								'ZOrder', 5,
								'Image', "UI/PDA/WEBSites/Bobby Rays/frame_right_line.png",
								'FrameBox', box(0, 7, 7, 7),
							}),
							PlaceObj('XTemplateWindow', {
								'LayoutMethod', "VList",
								'LayoutVSpacing', -7,
							}, {
								PlaceObj('XTemplateTemplate', {
									'__template', "PDABrowserBobbyRay_Order_EntryHeader",
									'Id', "idItemListHeader",
									'Margins', box(0, 0, 14, 0),
									'MinWidth', 678,
									'MinHeight', 67,
									'MaxWidth', 678,
									'MaxHeight', 67,
								}),
								PlaceObj('XTemplateWindow', {
									'Id', "idCartContent",
								}, {
									PlaceObj('XTemplateWindow', {
										'comment', "left content",
										'__context', function (parent, context) return g_BobbyRayCart end,
										'__class', "SnappingScrollArea",
										'Id', "idSectorList",
										'BorderWidth', 0,
										'Padding', box(0, 0, 0, 0),
										'MinWidth', 427,
										'MaxHeight', 427,
										'OnLayoutComplete', function (self)
											local bbox = box()
											for idx = 1, 12 do
												local child = self[idx]
												bbox:InplaceExtend(child.box)
											end
											local x, y = self.parent.box:minxyz()
											local w, h = bbox:sizexyz()
											self.InvalidateLayout = empty_func
											self:SetBox(x, y, w, h, "dont-move")
											self.InvalidateLayout = SnappingScrollArea.InvalidateLayout
											
											local scroll = self:ResolveId("idSectorScroll")
											local x, y = scroll.box:minxyz()
											local w, h = scroll.box:sizexyz()
											scroll.InvalidateLayout = empty_func
											scroll:SetBox(x, y, w, bbox:sizey(), "dont-move")
											scroll.InvalidateLayout = MessengerScrollbar_Gold.InvalidateLayout
											scroll.layout_update = true
											scroll:UpdateLayout()
											
											local cur_w, cur_h = GetResolution()
											if self.prev_w ~= cur_w or self.prev_h ~= cur_h then
												scroll:ScrollTo(0)
											end
											self.prev_w, self.prev_h = GetResolution()
											
											-- fixup frames
											local header = self:ResolveId("node"):ResolveId("idItemListHeader")
											local sector = self:ResolveId("node"):ResolveId("idSectorList")
											local x = header.box:minx()
											local y = header.box:miny()
											local w = header.box:sizex()
											local h = sector.box:maxy() - header.box:miny()
											self:ResolveId("idCartFrameFixTop"):SetBox(x,y,w,h)
											self:ResolveId("idCartFrameFixRight"):SetBox(x,y,w,h)
											
											SnappingScrollArea.OnLayoutComplete(self)
										end,
										'LayoutVSpacing', -7,
										'Clip', false,
										'VScroll', "idSectorScroll",
										'MouseWheelStep', 33,
									}, {
										PlaceObj('XTemplateForEach', {
											'array', function (parent, context) return BobbyRayCartUnitsToOrders() end,
											'item_in_context', "store_entry",
											'__context', function (parent, context, item, i, n) return item end,
											'run_after', function (child, context, item, i, n, last)
												
											end,
										}, {
											PlaceObj('XTemplateTemplate', {
												'__template', "PDABrowserBobbyRay_Order_Entry",
												'MinHeight', 41,
												'MaxHeight', 41,
												'OnLayoutComplete', function (self)  end,
											}),
											}),
										}),
									PlaceObj('XTemplateWindow', {
										'__class', "MessengerScrollbar_Gold",
										'Id', "idSectorScroll",
										'ZOrder', 7,
										'Dock', "right",
										'MinWidth', 14,
										'FoldWhenHidden', false,
										'Background', RGBA(55, 49, 33, 255),
										'Target', "idSectorList",
										'AutoHide', true,
										'UnscaledWidth', 16,
									}),
									}),
								}),
							}),
						PlaceObj('XTemplateWindow', {
							'Id', "idDelivery",
							'Margins', box(0, 0, 14, 0),
							'Dock', "bottom",
							'OnLayoutComplete', function (self)
								local b = self.box
								self:ResolveId("idDeliveryFrameFixTop"):SetBox(b:minx(), b:miny(), b:sizex(), b:sizey())
								self:ResolveId("idDeliveryFrameFixRight"):SetBox(b:minx(), b:miny(), b:sizex(), b:sizey())
							end,
						}, {
							PlaceObj('XTemplateWindow', {
								'comment', "overlay at the top to get around visual artifacts",
								'__class', "XFrame",
								'Id', "idDeliveryFrameFixTop",
								'ZOrder', 6,
								'Image', "UI/PDA/WEBSites/Bobby Rays/frame_top_line.png",
								'FrameBox', box(7, 7, 7, 0),
							}),
							PlaceObj('XTemplateWindow', {
								'comment', "overlay on the right to get around visual artifacts",
								'__class', "XFrame",
								'Id', "idDeliveryFrameFixRight",
								'ZOrder', 5,
								'Image', "UI/PDA/WEBSites/Bobby Rays/frame_right_line.png",
								'FrameBox', box(0, 7, 7, 7),
							}),
							PlaceObj('XTemplateWindow', {
								'LayoutMethod', "VList",
								'LayoutHSpacing', -7,
								'LayoutVSpacing', -7,
								'Background', RGBA(255, 255, 255, 0),
							}, {
								PlaceObj('XTemplateWindow', {
									'Id', "idDeliverySetup",
									'LayoutMethod', "HList",
									'LayoutHSpacing', -7,
								}, {
									PlaceObj('XTemplateWindow', {
										'Id', "idDeliveryOptions",
										'HAlign', "left",
										'LayoutMethod', "VList",
										'LayoutVSpacing', -7,
									}, {
										PlaceObj('XTemplateForEach', {
											'array', function (parent, context) return PresetArray("BobbyRayShopDeliveryDef") end,
											'__context', function (parent, context, item, i, n) return item end,
											'run_after', function (child, context, item, i, n, last)
												
											end,
										}, {
											PlaceObj('XTemplateTemplate', {
												'__context', function (parent, context)
													return context
												end,
												'__template', "PDABrowserBobbyRay_Order_EntryDelivery",
											}),
											}),
										}),
									PlaceObj('XTemplateWindow', {
										'Id', "idDeliveryPrice",
										'HAlign', "left",
										'MinWidth', 124,
										'MinHeight', 124,
										'MaxWidth', 124,
										'MaxHeight', 124,
										'Background', RGBA(22, 20, 19, 230),
									}, {
										PlaceObj('XTemplateWindow', {
											'__context', function (parent, context)
												return context
											end,
											'__class', "XContextFrame",
											'IdNode', false,
											'Dock', "box",
											'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
											'FrameBox', box(7, 7, 7, 7),
											'OnContextUpdate', function (self, context, ...)
												
											end,
										}, {
											PlaceObj('XTemplateWindow', {
												'__context', function (parent, context) return g_BobbyRayCart end,
												'__class', "XText",
												'Id', "idDeliveryPriceText",
												'HAlign', "center",
												'VAlign', "center",
												'TextStyle', "PDABobbyStore_SCP18C",
												'ContextUpdateOnOpen', true,
												'OnContextUpdate', function (self, context, ...)
													local totalCost = MulDivRound(BobbyRayCartGetDeliveryOption().Price, gv_Sectors[BobbyRayCartGetDeliverySector()].BobbyRayDeliveryCostMultiplier, 100)
													self:SetText(T{770368132801, "<money(Cost)>", Cost = totalCost})
												end,
												'Translate', true,
											}),
											}),
										}),
									}),
								PlaceObj('XTemplateWindow', {
									'Id', "idDeliveryTotal",
									'HAlign', "center",
									'VAlign', "center",
									'MinWidth', 664,
									'MinHeight', 60,
									'MaxWidth', 664,
									'MaxHeight', 60,
									'OnLayoutComplete', function (self)
										local txt = self:ResolveId("idDeliveryMessage")
										local placeholder = self:ResolveId("idDeliveryPlaceholder")
										local b = placeholder.box
										txt.InvalidateLayout = empty_func
										txt:SetBox(b:minx(), b:miny(), b:sizex(), b:sizey())
										txt.InvalidateLayout = XText.InvalidateLayout
									end,
									'Background', RGBA(22, 20, 19, 230),
								}, {
									PlaceObj('XTemplateWindow', {
										'__class', "XText",
										'Id', "idDeliveryMessage",
										'Dock', "ignore",
										'HAlign', "center",
										'VAlign', "center",
										'LayoutMethod', "HList",
										'LayoutHSpacing', -7,
										'Visible', false,
										'FoldWhenHidden', true,
										'TextStyle', "PDABobbyStore_HG18I",
										'ContextUpdateOnOpen', true,
										'OnContextUpdate', function (self, context, ...)
											local count, cost = BobbyRayCartGetAggregate()
											self:SetVisible(cost > Game.Money)
											XText.OnContextUpdate(self,context,...)
										end,
										'Translate', true,
										'Text', T(896721286597, --[[XTemplate PDABrowserBobbyRay_Order Text]] "NOT ENOUGH FUNDS!"),
										'TextHAlign', "center",
										'TextVAlign', "center",
									}),
									PlaceObj('XTemplateWindow', {
										'__class', "XContextFrame",
										'IdNode', false,
										'Dock', "box",
										'LayoutMethod', "HList",
										'LayoutHSpacing', -7,
										'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
										'FrameBox', box(7, 7, 7, 7),
									}, {
										PlaceObj('XTemplateWindow', {
											'comment', "placeholder",
											'Id', "idDeliveryPlaceholder",
											'LayoutMethod', "HList",
											'LayoutHSpacing', -7,
										}, {
											PlaceObj('XTemplateWindow', {
												'HAlign', "left",
												'MinWidth', 300,
												'MaxWidth', 300,
											}),
											PlaceObj('XTemplateWindow', {
												'HAlign', "left",
												'MinWidth', 114,
												'MaxWidth', 114,
											}),
											}),
										PlaceObj('XTemplateWindow', {
											'__class', "XContextFrame",
											'IdNode', false,
											'HAlign', "left",
											'MinWidth', 147,
											'MaxWidth', 147,
											'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
											'FrameBox', box(7, 7, 7, 7),
										}, {
											PlaceObj('XTemplateWindow', {
												'__class', "XText",
												'HAlign', "center",
												'VAlign', "center",
												'TextStyle', "PDABobbyStore_HG18G",
												'Translate', true,
												'Text', T(281408583985, --[[XTemplate PDABrowserBobbyRay_Order Text]] "GRAND TOTAL"),
											}),
											}),
										PlaceObj('XTemplateWindow', {
											'__class', "XContextFrame",
											'IdNode', false,
											'HAlign', "left",
											'MinWidth', 124,
											'MaxWidth', 124,
											'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
											'FrameBox', box(7, 7, 7, 7),
										}, {
											PlaceObj('XTemplateWindow', {
												'__class', "XText",
												'Id', "idDeliveryTotalCost",
												'HAlign', "center",
												'VAlign', "center",
												'TextStyle', "PDABobbyStore_HG18G",
												'OnContextUpdate', function (self, context, ...)
													local count, cost = BobbyRayCartGetAggregate()
													self:SetText(T{770368132801, "<money(Cost)>", Cost = cost})
													local hasEnough = cost <= Game.Money
													self:SetTextStyle(hasEnough and "PDABobbyStore_HG24C" or "PDABobbyStore_HG24I")
												end,
												'Translate', true,
											}),
											}),
										}),
									}),
								}),
							}),
						}),
					PlaceObj('XTemplateWindow', {
						'Id', "idSector",
						'Dock', "right",
						'MinWidth', 356,
						'MaxWidth', 356,
					}, {
						PlaceObj('XTemplateWindow', {
							'Background', RGBA(22, 20, 19, 230),
						}, {
							PlaceObj('XTemplateTemplate', {
								'__template', "SectorPickBobby",
								'MinWidth', 600,
								'MaxHeight', 500,
							}),
							}),
						}),
					}),
				PlaceObj('XTemplateWindow', {
					'comment', "Bottom",
					'Margins', box(0, 0, 0, -5),
					'Dock', "bottom",
					'VAlign', "center",
					'Background', RGBA(255, 107, 0, 0),
				}, {
					PlaceObj('XTemplateWindow', {
						'Dock', "left",
						'MinWidth', 664,
					}, {
						PlaceObj('XTemplateWindow', {
							'__context', function (parent, context) return g_BobbyRayCart end,
							'__class', "PDACommonButtonClass",
							'Id', "idButtonShop",
							'Dock', "left",
							'MinWidth', 144,
							'LayoutMethod', "Box",
							'DisabledBackground', RGBA(255, 255, 255, 223),
							'OnPressEffect', "action",
							'OnPressParam', "idShop",
							'Image', "UI/PDA/WEBSites/Bobby Rays/shop_button.png",
							'FrameBox', box(9, 9, 9, 9),
							'Columns', 4,
							'SqueezeY', true,
							'TextStyle', "PDABobbyStore_SCP_16MB_Shadow",
							'Translate', true,
							'Text', T(812883700333, --[[XTemplate PDABrowserBobbyRay_Order Text]] "Shop"),
							'ColumnsUse', "abccd",
						}, {
							PlaceObj('XTemplateCode', {
								'run', function (self, parent, context)
									local host = GetActionsHost(parent, true)
									if parent.OnPressEffect == "action" then
										local value = parent.OnPressParam
										parent.action = host and host:ActionById(value) or nil
										if not parent.action then
											parent.action = XShortcutsTarget:ActionById(value) or nil
										end
									end
								end,
							}),
							}),
						PlaceObj('XTemplateWindow', {
							'__context', function (parent, context) return g_BobbyRayCart end,
							'__class', "PDACommonButtonClass",
							'Id', "idButtonClear",
							'Dock', "right",
							'MinWidth', 144,
							'LayoutMethod', "Box",
							'OnContextUpdate', function (self, context, ...)
								self:SetEnabled(self.action.ActionState() == "enabled")
							end,
							'DisabledBackground', RGBA(255, 255, 255, 240),
							'OnPressEffect', "action",
							'OnPressParam', "idClearOrder",
							'Image', "UI/PDA/WEBSites/Bobby Rays/shop_button.png",
							'FrameBox', box(7, 7, 7, 7),
							'Columns', 4,
							'SqueezeY', true,
							'TextStyle', "PDABobbyStore_SCP_16MB_Shadow",
							'Translate', true,
							'Text', T(476128178184, --[[XTemplate PDABrowserBobbyRay_Order Text]] "Clear Order"),
							'ColumnsUse', "abccd",
						}, {
							PlaceObj('XTemplateCode', {
								'run', function (self, parent, context)
									local host = GetActionsHost(parent, true)
									if parent.OnPressEffect == "action" then
										local value = parent.OnPressParam
										parent.action = host and host:ActionById(value) or nil
										if not parent.action then
											parent.action = XShortcutsTarget:ActionById(value) or nil
										end
									end
								end,
							}),
							}),
						}),
					PlaceObj('XTemplateWindow', {
						'__class', "PDACommonButtonClass",
						'Id', "idButtonAccept",
						'Dock', "right",
						'MinWidth', 144,
						'LayoutMethod', "Box",
						'OnContextUpdate', function (self, context, ...)
							self:SetEnabled(self.action.ActionState() == "enabled")
						end,
						'DisabledBackground', RGBA(255, 255, 255, 240),
						'OnPressEffect', "action",
						'OnPressParam', "idAcceptOrder",
						'Image', "UI/PDA/WEBSites/Bobby Rays/shop_button.png",
						'FrameBox', box(9, 9, 9, 9),
						'Columns', 4,
						'SqueezeY', true,
						'TextStyle', "PDABobbyStore_SCP_16MB_Shadow",
						'Translate', true,
						'Text', T(854800665448, --[[XTemplate PDABrowserBobbyRay_Order Text]] "ACCEPT ORDER"),
						'ColumnsUse', "abccd",
					}, {
						PlaceObj('XTemplateCode', {
							'run', function (self, parent, context)
								local host = GetActionsHost(parent, true)
								if parent.OnPressEffect == "action" then
									local value = parent.OnPressParam
									parent.action = host and host:ActionById(value) or nil
									if not parent.action then
										parent.action = XShortcutsTarget:ActionById(value) or nil
									end
								end
							end,
						}),
						}),
					}),
				}),
			PlaceObj('XTemplateWindow', {
				'__context', function (parent, context) return "BobbyRayShopFinishPurchaseUI" end,
				'__class', "XContextWindow",
				'Id', "idFinishOrder",
				'Dock', "box",
				'Visible', false,
				'FoldWhenHidden', true,
				'Background', RGBA(0, 0, 0, 160),
				'HandleMouse', true,
				'OnContextUpdate', function (self, context, ...)
					self:SetVisible(true)
					PlayFX("BobbyRayFinishPurchase", "start")
				end,
			}, {
				PlaceObj('XTemplateWindow', {
					'__class', "XImage",
					'Image', "UI/PDA/WEBSites/Bobby Rays/order_finish.png",
				}),
				PlaceObj('XTemplateFunc', {
					'name', "OnMouseButtonDown(self, pos, button)",
					'func', function (self, pos, button)
						if button == "L" then
							GetPDABrowserDialog():SetMode("bobby_ray_shop", "front")
						end
					end,
				}),
				}),
			}),
		PlaceObj('XTemplateTemplate', {
			'__condition', function (parent, context) return not InitialConflictNotStarted() end,
			'__template', "PDAStartButton",
			'Dock', "box",
			'VAlign', "bottom",
			'MinWidth', 200,
		}, {
			PlaceObj('XTemplateFunc', {
				'name', "SetOutsideScale(self, scale)",
				'func', function (self, scale)
					local dlg = GetDialog("PDADialog")
					local screen = dlg.idPDAScreen
					XWindow.SetOutsideScale(self, screen.scale)
				end,
			}),
			}),
		}),
})

