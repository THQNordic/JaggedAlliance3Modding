-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	group = "BobbyRayGunsShop",
	id = "PDABrowserBobbyRay_Order_EntryDelivery",
	PlaceObj('XTemplateWindow', {
		'__context', function (parent, context)
			return context
		end,
		'__class', "XContextWindow",
		'IdNode', true,
		'MinHeight', 46,
		'MaxHeight', 46,
		'LayoutMethod', "HList",
		'LayoutHSpacing', -7,
		'Background', RGBA(22, 20, 19, 230),
		'HandleMouse', true,
	}, {
		PlaceObj('XTemplateFunc', {
			'name', "Open(self, ...)",
			'func', function (self, ...)
				XContextWindow.Open(self)
				local ctx = self:GetContext()
				local sectorMultiplier = gv_Sectors[BobbyRayCartGetDeliverySector()].BobbyRayDeliveryCostMultiplier
				local totalPrice = MulDivRound(sectorMultiplier, BobbyRayStoreDeliveryPrice(ctx.id), 100)
				self:ResolveId("idTime"):SetText(ctx.TimeDescription)
				self:ResolveId("idDescription"):SetText(ctx.Name)
				self:ResolveId("idPrice"):SetText(T{770368132801, "<money(Cost)>", Cost = totalPrice})
				self:UpdateSelection()
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnSetRollover(self, rollover)",
			'func', function (self, rollover)
				local context = self:GetContext()
				if rollover and context then 
					self:SetBackground(RGBA(53,46,39,230))
					PlayFX("buttonRollover", "start")
				else
					self:SetBackground(RGBA(22,20,19,230))
				end
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnMouseButtonDown(self, pos, button)",
			'func', function (self, pos, button)
				if button == "L" and self:GetContext().id ~= BobbyRayCartGetDeliveryOption().id then
					NetSyncEvent("BobbyRaySetDeliveryOption", self:GetContext().id)
					PlayFX("buttonPress", "start")
				else
					PlayFX("IactDisabled", "start")
				end
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "UpdateSelection(self,...)",
			'func', function (self,...)
				self:ResolveId("idCheck"):SetCheck(self:GetContext() == BobbyRayCartGetDeliveryOption())
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'comment', "observer for cart changes",
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextControl",
			'Dock', "ignore",
			'MaxWidth', 0,
			'MaxHeight', 0,
			'OnLayoutComplete', function (self)  end,
			'Visible', false,
			'FoldWhenHidden', true,
			'OnContextUpdate', function (self, context, ...)
				self:ResolveId("node"):UpdateSelection()
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextFrame",
			'IdNode', false,
			'HAlign', "left",
			'MinWidth', 114,
			'MaxWidth', 114,
			'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
			'FrameBox', box(7, 7, 7, 7),
			'TransparentCenter', true,
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XText",
				'Id', "idTime",
				'HAlign', "center",
				'VAlign', "center",
				'TextStyle', "PDABobbyStore_SCP18C",
				'Translate', true,
			}),
			}),
		PlaceObj('XTemplateWindow', {
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextFrame",
			'IdNode', false,
			'HAlign', "left",
			'MinWidth', 300,
			'MaxWidth', 300,
			'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
			'FrameBox', box(7, 7, 7, 7),
			'TransparentCenter', true,
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XText",
				'Id', "idDescription",
				'Padding', box(17, 2, 2, 2),
				'HAlign', "left",
				'VAlign', "center",
				'TextStyle', "PDABobbyStore_SCP16C",
				'Translate', true,
			}),
			}),
		PlaceObj('XTemplateWindow', {
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextFrame",
			'IdNode', false,
			'HAlign', "left",
			'MinWidth', 147,
			'MaxWidth', 147,
			'Image', "UI/PDA/WEBSites/Bobby Rays/frame",
			'FrameBox', box(7, 7, 7, 7),
			'TransparentCenter', true,
		}, {
			PlaceObj('XTemplateWindow', {
				'__context', function (parent, context) return BobbyRayCartGetDeliveryOption().id end,
				'__class', "XText",
				'Id', "idPrice",
				'IdNode', false,
				'Dock', "box",
				'HAlign', "center",
				'VAlign', "center",
				'TextStyle', "PDABobbyStore_SCP18C",
				'Translate', true,
			}, {
				PlaceObj('XTemplateWindow', {
					'comment', "observer for delivery sector changes",
					'__context', function (parent, context) return "DeliverySectorChanged" end,
					'__class', "XContextWindow",
					'Visible', false,
					'FoldWhenHidden', true,
					'ContextUpdateOnOpen', true,
					'OnContextUpdate', function (self, context, ...)
						local ctx = self:ResolveId("node"):GetContext()
						local sectorMultiplier = gv_Sectors[BobbyRayCartGetDeliverySector()].BobbyRayDeliveryCostMultiplier
						local totalPrice = MulDivRound(sectorMultiplier, BobbyRayStoreDeliveryPrice(ctx.id), 100)
						
						self.parent:SetText(T{770368132801, "<money(Cost)>", Cost = totalPrice})
					end,
				}),
				}),
			PlaceObj('XTemplateWindow', {
				'__class', "PDACommonCheckButtonClass",
				'Id', "idCheck",
				'IdNode', false,
				'Margins', box(9, 0, 9, 0),
				'Padding', box(0, 0, 0, 0),
				'Dock', "right",
				'MinWidth', 0,
				'MinHeight', 28,
				'MaxHeight', 28,
				'HandleKeyboard', false,
				'HandleMouse', false,
				'IconScale', point(900, 900),
				'IconColor', RGBA(255, 255, 255, 255),
			}),
			}),
		}),
})

