-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "SatelliteConflictSquadsAndMercsClass",
	group = "Zulu Satellite UI",
	id = "SatelliteConflictSquadsAndEnemies",
	PlaceObj('XTemplateWindow', {
		'__class', "SatelliteConflictSquadsAndMercsClass",
		'IdNode', false,
		'Padding', box(0, 30, 0, 30),
		'MinWidth', 498,
		'MaxWidth', 498,
		'LayoutMethod', "VList",
		'LayoutVSpacing', 30,
		'ContextUpdateOnOpen', true,
		'OnContextUpdate', function (self, context, ...)
			self.currentSquadIndex = table.find(self.context, self.selected_squad)
			self[1].idTitle:SetContext(self.selected_squad, true)
			SquadsAndMercsClass.OnContextUpdate(self, ...)
		end,
	}, {
		PlaceObj('XTemplateForEach', {
			'__context', function (parent, context, item, i, n) return item end,
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'Padding', box(10, 0, 10, 0),
				'LayoutMethod', "VList",
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					local squad = context.arriving and context[1] or context
					local is_squad_defeated = SatelliteConflict_IsSquadDefeated(squad)
					self:ResolveId("idName"):SetContext(SubContext(context,{defeated = is_squad_defeated}), true)
					self:ResolveId("idSquadImage"):SetContext(context, true)
					self:ResolveId("idSquadImage"):SetEnabled(not is_squad_defeated)
				end,
			}, {
				PlaceObj('XTemplateWindow', {
					'__class', "XContextWindow",
					'Id', "idTitle",
					'VAlign', "top",
					'ContextUpdateOnOpen', true,
				}, {
					PlaceObj('XTemplateWindow', {
						'__class', "XText",
						'Id', "idName",
						'Padding', box(4, 2, 2, 2),
						'Dock', "left",
						'HandleMouse', false,
						'TextStyle', "ConflictSquadName",
						'ContextUpdateOnOpen', true,
						'OnContextUpdate', function (self, context, ...)
							local text							
							if context and context.Name then
								text = IsT(context.Name) and context.Name or Untranslated(context.Name)
							else
								text = T(496804530535, "UNKNOWN ENEMIES")
							end
							local dlg_context = GetDialog(self).context
							local color = TLookupTag("<GameColorI>")
							if dlg_context.autoResolve then
								if context.defeated then
									self:SetText(color..T{705494748778, "<squadName> <style ConflictSquadNamePosition>/ exterminated</style>", squadName = text})
								else
									self:SetText(color..text)												
								end
							elseif context.arriving then
								self:SetText(T{426342230032, "<time(value)> <color><squadName> <style ConflictSquadNamePosition>/ arriving</style>", squadName = text, value = context.arriving, color = color})							
							else
								self:SetText(color..T{484322448915, "<squadName> <style ConflictSquadNamePosition>/ in sector</style>", squadName = text})							
							end
							XContextControl.OnContextUpdate(self, context)
						end,
						'Translate', true,
						'Text', T(512042932753, --[[XTemplate SatelliteConflictSquadsAndEnemies Text]] "<u(Name)>"),
						'WordWrap', false,
					}),
					PlaceObj('XTemplateWindow', {
						'__class', "XFrame",
						'Margins', box(5, 0, 0, 0),
						'BorderWidth', 1,
						'VAlign', "center",
						'Image', "UI/PDA/separate_line_vertical",
						'FrameBox', box(3, 3, 3, 3),
						'TileFrame', true,
					}),
					}),
				PlaceObj('XTemplateWindow', {
					'comment', "Mercs Themselves (Updates on Sel Squad Change)",
					'__context', function (parent, context) return context and context.arriving and context[1] or  context end,
					'__condition', function (parent, context) return context end,
					'__class', "XContentTemplate",
					'Id', "idParty",
					'IdNode', false,
					'LayoutMethod', "HList",
				}, {
					PlaceObj('XTemplateWindow', nil, {
						PlaceObj('XTemplateWindow', {
							'comment', "logo",
							'__class', "XContextImage",
							'Id', "idSquadImage",
							'Margins', box(0, 10, 0, 0),
							'HAlign', "left",
							'VAlign', "top",
							'Image', "UI/Icons/SateliteView/enemy_squad",
							'OnContextUpdate', function (self, context, ...)
								if context.image then
									self:SetImage(context.image)
								end
								if context.Villain then
									self:SetImage("UI/Icons/SateliteView/enemy_boss")
								end
							end,
						}),
						}),
					PlaceObj('XTemplateWindow', {
						'__condition', function (parent, context) return context and context.arriving and context[1].units or  context.units end,
						'__class', "XContextWindow",
						'GridStretchY', false,
						'LayoutMethod', "Grid",
						'LayoutVSpacing', 60,
						'ContextUpdateOnOpen', true,
					}, {
						PlaceObj('XTemplateForEach', {
							'comment', "Mercs in the Current Team",
							'array', function (parent, context) return GroupEnemyMercs({context}, "separateDead" and true) end,
							'__context', function (parent, context, item, i, n) return item end,
							'run_after', function (child, context, item, i, n, last)
								local row_count = 6
								local i = i-1
								child:SetGridX(i%row_count + 1)
								child:SetGridY(i/row_count + 1)
								
								if context.count and context.count>1 then
									child.idName:SetTextHAlign("center")
									local color = context.is_dead and GameColors.F or GameColors.I 
									child.idBottomPart[1]:SetBackground(color)										
									child.idName:SetScaleModifier(point(1333,1333))
									child.idBottomPart:SetMinHeight(0)
									child.idName:SetTextStyle("PDAMercNameCard_Large")
									child.idName:SetPadding(box(0,-2,0,-2))
									child.idName:SetText(Untranslated(context.count))									
								else
									child.idName:SetText(context.DisplayName)	
								end
								
								if context.hasShipment then
									child.idShipment:SetVisible(true)
									child.idShipment:SetImage(context.hasShipment)
								end
								
								child.idBar:SetVisible(false)
								child.idBottomBar:SetVisible(false)
								if not context.count or context.count==1 then
									child.idBottomPart:SetVisible(false)
									child.idName:SetText(context.DisplayName)
								end
							end,
						}, {
							PlaceObj('XTemplateTemplate', {
								'__context', function (parent, context) return context.template end,
								'__template', "HUDMerc",
								'RolloverTemplate', "SmallRolloverLine",
								'RolloverAnchor', "center-bottom",
								'RolloverAnchorId', "idPortraitBG",
								'RolloverText', T(831801658535, --[[XTemplate SatelliteConflictSquadsAndEnemies RolloverText]] "<DisplayName>"),
								'Margins', box(0, 7, 0, 0),
								'ScaleModifier', point(750, 750),
								'LayoutMethod', "Box",
								'ChildrenHandleMouse', false,
							}, {
								PlaceObj('XTemplateWindow', {
									'comment', "diamond shipment icon",
									'__class', "XImage",
									'Id', "idShipment",
									'IdNode', false,
									'ZOrder', 0,
									'Margins', box(0, -16, 0, 0),
									'HAlign', "right",
									'VAlign', "top",
									'MinWidth', 46,
									'MaxWidth', 46,
									'UseClipBox', false,
									'Visible', false,
									'DrawOnTop', true,
									'ImageFit', "width",
								}),
								}),
							}),
						}),
					PlaceObj('XTemplateWindow', {
						'__condition', function (parent, context) return not next(context) or not context.units end,
						'Margins', box(0, 7, 0, 0),
						'HAlign', "left",
						'VAlign', "top",
						'MinWidth', 80,
						'MinHeight', 118,
						'MaxWidth', 80,
						'MaxHeight', 118,
						'ScaleModifier', point(700, 700),
					}, {
						PlaceObj('XTemplateWindow', {
							'Dock', "bottom",
							'VAlign', "bottom",
							'MinHeight', 30,
							'MaxHeight', 30,
							'Visible', false,
							'Background', RGBA(32, 35, 47, 255),
						}),
						PlaceObj('XTemplateWindow', {
							'__class', "XImage",
							'IdNode', false,
							'Margins', box(0, 10, 0, 0),
							'Dock', "box",
							'Image', "UI/Hud/portrait_background",
							'ImageFit', "largest",
						}),
						PlaceObj('XTemplateWindow', {
							'__class', "XImage",
							'IdNode', false,
							'Margins', box(0, 0, 0, -10),
							'Dock', "box",
							'Image', "UI/EnemiesPortraits/Unknown",
							'ImageFit', "largest",
						}),
						}),
					}),
				}),
			}),
		}),
})

