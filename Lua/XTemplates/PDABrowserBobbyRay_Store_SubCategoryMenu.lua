-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	group = "BobbyRayGunsShop",
	id = "PDABrowserBobbyRay_Store_SubCategoryMenu",
	PlaceObj('XTemplateWindow', {
		'__class', "XPopup",
		'BorderWidth', 0,
		'HAlign', "left",
		'VAlign', "top",
		'AnchorType', "top",
	}, {
		PlaceObj('XTemplateWindow', {
			'__class', "XFrame",
			'IdNode', false,
			'LayoutMethod', "VList",
			'HandleMouse', true,
			'Image', "UI/PDA/browser_pad.png",
			'FrameBox', box(5, 5, 5, 5),
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XList",
				'IdNode', false,
				'Padding', box(0, 5, 0, 5),
				'BorderColor', RGBA(32, 32, 32, 0),
				'Background', RGBA(195, 189, 172, 0),
				'BackgroundRectGlowColor', RGBA(0, 0, 0, 0),
				'FocusedBorderColor', RGBA(0, 0, 0, 0),
				'FocusedBackground', RGBA(255, 255, 255, 0),
				'DisabledBorderColor', RGBA(0, 0, 0, 0),
			}, {
				PlaceObj('XTemplateWindow', {
					'__class', "XTextButtonZulu",
					'Id', "idAllButton",
					'Padding', box(7, 0, 7, 0),
					'Background', RGBA(255, 255, 255, 0),
					'OnContextUpdate', function (self, context, ...)
						local selected = not self:GetContext().active_subcategory and self:GetContext().active_category == self:GetContext().category
						self:SetEnabled(not selected)
					end,
					'FXMouseIn', "buttonRollover",
					'FXPress', "buttonPress",
					'FXPressDisabled', "IactDisabled",
					'OnPress', function (self, gamepad)
						GetDialog(self):SetCategory(self:GetContext().category)
						self:ResolveId("node"):Close()
					end,
					'RolloverBackground', RGBA(32, 35, 47, 255),
					'PressedBackground', RGBA(0, 0, 0, 56),
					'TextStyle', "PDABobbyStore_SCP_16MB_Popup",
					'Translate', true,
					'Text', T(213273957738, --[[XTemplate PDABrowserBobbyRay_Store_SubCategoryMenu Text]] "All"),
				}),
				PlaceObj('XTemplateWindow', {
					'Margins', box(5, 5, 5, 5),
					'VAlign', "center",
					'MinHeight', 3,
					'MaxHeight', 3,
					'Background', RGBA(130, 128, 120, 96),
				}, {
					PlaceObj('XTemplateFunc', {
						'name', "IsSelectable(self)",
						'func', function (self)
							return false
						end,
					}),
					}),
				PlaceObj('XTemplateForEach', {
					'array', function (parent, context) return context.category:GetSubCategories() end,
					'item_in_context', "subcategory",
				}, {
					PlaceObj('XTemplateWindow', {
						'__class', "XTextButtonZulu",
						'Padding', box(7, 0, 7, 0),
						'Background', RGBA(255, 255, 255, 0),
						'OnContextUpdate', function (self, context, ...)
							self:SetText(self:GetContext().subcategory.DisplayName)
							local selected = self:GetContext().active_subcategory == self:GetContext().subcategory
							self:SetEnabled(not selected)
						end,
						'FXMouseIn', "buttonRollover",
						'FXPress', "buttonPress",
						'FXPressDisabled', "IactDisabled",
						'OnPress', function (self, gamepad)
							GetDialog(self):SetCategory(self:GetContext().category, self:GetContext().subcategory)
							self:ResolveId("node"):Close()
						end,
						'RolloverBackground', RGBA(32, 35, 47, 255),
						'PressedBackground', RGBA(0, 0, 0, 56),
						'TextStyle', "PDABobbyStore_SCP_16MB_Popup",
						'Translate', true,
					}),
					}),
				}),
			}),
		PlaceObj('XTemplateFunc', {
			'name', "Close(self,...)",
			'func', function (self,...)
				self.button:OnClosePopupMenu()
				XPopup.Close(self,...)
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnCaptureLost(self)",
			'func', function (self)
				if self.window_state ~= "open" then return end
				self:Close()
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnMouseButtonDown(self, pos, button)",
			'func', function (self, pos, button)
				if not GetUIStyleGamepad() then 
					self:ResolveId("idAllButton"):OnPress()
					return
				end
				if self:MouseInWindow(pos) then return end
				if self.window_state ~= "open" then return end
				self:Close()
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnMousePos(self, pos, button)",
			'func', function (self, pos, button)
				if GetUIStyleGamepad() then return end
				local mouse_in_window = self:MouseInWindow(pos) or self.button:MouseInWindow(pos)
				if not mouse_in_window then 
					self:Close() 
					return 
				end
			end,
		}),
		PlaceObj('XTemplateFunc', {
			'name', "OnShortcut(self, shortcut, source, ...)",
			'func', function (self, shortcut, source, ...)
				if shortcut == "Escape" or shortcut == "ButtonB" then
					self:Close()
					return "break"
				end
				return XPopup.OnShortcut(self, shortcut, source, ...)
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'__class', "VirtualCursorManager",
			'Reason', "bobby ray subcategory menu",
			'ActionType', false,
		}),
		}),
})

