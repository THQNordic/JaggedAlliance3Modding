-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "XWindow",
	group = "Zulu",
	id = "IGMainActions",
	PlaceObj('XTemplateWindow', nil, {
		PlaceObj('XTemplateAction', {
			'ActionId', "idClose",
			'ActionName', T(236424697363, --[[XTemplate IGMainActions ActionName]] "RETURN TO GAME"),
			'ActionToolbar', "mainmenu",
			'ActionShortcut', "Escape",
			'ActionGamepad', "ButtonB",
			'OnAction', function (self, host, source, ...)
				host:Close()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idSave",
			'ActionName', T(711143528069, --[[XTemplate IGMainActions ActionName]] "Save Game"),
			'ActionToolbar', "mainmenu",
			'ActionState', function (self, host)
				return CanSaveGame() and "enabled" or "disabled"
			end,
			'OnActionEffect', "mode",
			'OnActionParam', "SaveWIP",
			'OnAction', function (self, host, source, ...)
				assert(IsKindOf(host, "XDialog"))
				host:SetMode(self.OnActionParam)
				CreateRealTimeThread(function()
					LoadingScreenOpen("idLoadingScreen", "save load")
					local saves = g_SaveGameObj or SaveLoadObjectCreateAndLoad()
					saves:WaitGetSaveItems()
					WaitCaptureCurrentScreenshot()
					LoadingScreenClose("idLoadingScreen", "save load")
					Sleep(5)		
					g_SelectedSave = false
					if host.window_state == "destroying" then return end
					host:ResolveId("idSubContent"):SetMode("savegame", saves)
					host:ResolveId("idSubMenuTittle"):SetText(self.ActionName)
				end)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idLoad",
			'ActionName', T(844486065439, --[[XTemplate IGMainActions ActionName]] "Load Game"),
			'ActionToolbar', "mainmenu",
			'ActionState', function (self, host)
				return CanLoadGame() and "enabled" or "disabled"
			end,
			'OnActionEffect', "mode",
			'OnActionParam', "LoadWIP",
			'OnAction', function (self, host, source, ...)
				local effect = self.OnActionEffect
				local param = self.OnActionParam
				if effect == "close" and host and host.window_state ~= "destroying" then
					host:Close(param ~= "" and param or nil)
				elseif effect == "mode" and host then
					assert(IsKindOf(host, "XDialog"))
					host:SetMode(param)
					CreateRealTimeThread(function()
						LoadingScreenOpen("idLoadingScreen", "save load")
						local saves = g_SaveGameObj or SaveLoadObjectCreateAndLoad()
						saves:WaitGetSaveItems()
						LoadingScreenClose("idLoadingScreen", "save load")
						Sleep(5)		
						g_SelectedSave = false
						if host.window_state == "destroying" then return end		
						host:ResolveId("idSubContent"):SetMode("loadgame", saves)
						host:ResolveId("idSubMenuTittle"):SetText(self.ActionName)
					end)
				elseif effect == "back" and host then
					assert(IsKindOf(host, "XDialog"))
					SetBackDialogMode(host)
				elseif effect == "popup" then
					local actions_view = GetParentOfKind(source, "XActionsView")
					if actions_view then
						actions_view:PopupAction(self.ActionId, host, source)
					else
						XShortcutsTarget:OpenPopupMenu(self.ActionId, terminal.GetMousePos())
					end
				else
					--print(self.ActionId, "activated")
				end
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idReplays",
			'ActionName', T(159033147825, --[[XTemplate IGMainActions ActionName]] "LOAD REPLAY"),
			'ActionToolbar', "mainmenu",
			'ActionState', function (self, host)
				return CanLoadGame() and "enabled" or "disabled"
			end,
			'OnActionEffect', "mode",
			'OnActionParam', "replays",
			'OnAction', function (self, host, source, ...)
				assert(IsKindOf(host, "XDialog"))
				
				local err, files = AsyncListFiles(config.GameRecordsPath, "*", "recursive")
				if err then
					print(err)
					return
				end
				files = table.reverse(files)
				
				host:SetMode(self.OnActionParam)
				host:ResolveId("idSubContent"):SetMode(self.OnActionParam, files)
				host:ResolveId("idSubMenuTittle"):SetText(self.ActionName)
			end,
			'__condition', function (parent, context) return ShowReplayUI end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idMultiplayer",
			'ActionName', T(834155302103, --[[XTemplate IGMainActions ActionName]] "Multiplayer"),
			'ActionToolbar', "mainmenu",
			'OnAction', function (self, host, source, ...)
				MultiplayerInGameHostSetUI()
			end,
			'__condition', function (parent, context) return not Platform.demo and Game and Game.CampaignStarted end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idHelp",
			'ActionName', T(197682800350, --[[XTemplate IGMainActions ActionName]] "Help"),
			'ActionToolbar', "mainmenu",
			'OnAction', function (self, host, source, ...)
				host:Close()
				OpenHelpMenu()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idMercControl",
			'ActionName', T(686499586296, --[[XTemplate IGMainActions ActionName]] "Co-Op Merc Control"),
			'ActionToolbar', "mainmenu",
			'OnAction', function (self, host, source, ...)
				host:Close()
				NetSyncEvent("OpenCoopMercsManagement")
			end,
			'__condition', function (parent, context) return IsCoOpGame() and NetIsHost() end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idOptions",
			'ActionName', T(541172222567, --[[XTemplate IGMainActions ActionName]] "Options"),
			'ActionToolbar', "mainmenu",
			'OnActionEffect', "mode",
			'OnActionParam', "Options",
			'OnAction', function (self, host, source, ...)
				local effect = self.OnActionEffect
				local param = self.OnActionParam
				if effect == "close" and host and host.window_state ~= "destroying" then
					host:Close(param ~= "" and param or nil)
				elseif effect == "mode" and host then
					assert(IsKindOf(host, "XDialog"))
					host:SetMode(param)
					local firstEnabledCategory
					for i, category in ipairs(OptionsCategories) do
						if not category.no_edit then
							firstEnabledCategory = category
							break
						end
					end
					host:ResolveId("idSubContent"):SetMode("options", {optObj = firstEnabledCategory})
					host:ResolveId("idSubSubContent"):SetMode("empty")
					host:ResolveId("idSubMenuTittle"):SetText(firstEnabledCategory.display_name)
					host:ResolveId("idList")[1].idBtnText:SetTextStyle("MMButtonTextSelected")
					host:ResolveId("idList")[1].focused = true
					host:ResolveId("idList")[1].enabled = false
				elseif effect == "back" and host then
					assert(IsKindOf(host, "XDialog"))
					SetBackDialogMode(host)
				elseif effect == "popup" then
					local actions_view = GetParentOfKind(source, "XActionsView")
					if actions_view then
						actions_view:PopupAction(self.ActionId, host, source)
					else
						XShortcutsTarget:OpenPopupMenu(self.ActionId, terminal.GetMousePos())
					end
				else
					--print(self.ActionId, "activated")
				end
			end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idPhotoMode",
			'ActionName', T(207584479877, --[[XTemplate IGMainActions ActionName]] "Photo Mode"),
			'ActionToolbar', "mainmenu",
			'OnActionEffect', "mode",
			'OnActionParam', "PhotoMode",
			'OnAction', function (self, host, source, ...)
				PhotoModeDialogOpen()
			end,
			'__condition', function (parent, context) return not gv_SatelliteView end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idCheats",
			'ActionName', T(467200053152, --[[XTemplate IGMainActions ActionName]] "Cheats"),
			'ActionToolbar', "mainmenu",
			'OnActionEffect', "mode",
			'OnActionParam', "Cheats",
			'__condition', function (parent, context) return AreCheatsEnabled() end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idBugReport",
			'ActionName', T(712641969318, --[[XTemplate IGMainActions ActionName]] "Bug Report"),
			'ActionToolbar', "mainmenu",
			'OnAction', function (self, host, source, ...)
				host:SetVisible(false, true)
				host:Close()
				CreateRealTimeThread(CreateXBugReportDlg)
			end,
			'__condition', function (parent, context) return not Platform.steamdeck and not Platform.demo end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCombatTest",
			'ActionName', T(419346159695, --[[XTemplate IGMainActions ActionName]] "Combat Tests"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "MAPS",
			'OnActionEffect', "mode",
			'OnActionParam', "CombatTest",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idQuickStart",
			'ActionName', T(755922374863, --[[XTemplate IGMainActions ActionName]] "QUICK START"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "MAPS",
			'OnAction', function (self, host, source, ...)
				EditorDeactivate()
				local campaign = "HotDiamonds"
				local new_game_params = {difficulty = "Normal"}
				NetGossip("QuickStart", campaign, new_game_params, GetCurrentPlaytime(), Game and Game.CampaignTime)
				CreateRealTimeThread(QuickStartCampaign, campaign, new_game_params)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatEndingPeace",
			'ActionName', T(177454894846, --[[XTemplate IGMainActions ActionName]] "Ending (Peace)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "MAPS",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncEvent("HotDiamonds_SetupEnding", "peace")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatEndingCivilWar",
			'ActionName', T(946956453030, --[[XTemplate IGMainActions ActionName]] "Ending (Civil War)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "MAPS",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncEvent("HotDiamonds_SetupEnding", "civil war")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatEndingCoup",
			'ActionName', T(818511714716, --[[XTemplate IGMainActions ActionName]] "Ending (Coup)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "MAPS",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncEvent("HotDiamonds_SetupEnding", "coup")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idAddMerc",
			'ActionName', T(111489019094, --[[XTemplate IGMainActions ActionName]] "Add Mercenary"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "HIRING",
			'OnActionEffect', "mode",
			'OnActionParam', "AddMerc",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idRemoveMerc",
			'ActionName', T(442809960593, --[[XTemplate IGMainActions ActionName]] "Remove Mercenary"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "HIRING",
			'OnActionEffect', "mode",
			'OnActionParam', "RemoveMerc",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idPresetSquad",
			'ActionName', T(447764793539, --[[XTemplate IGMainActions ActionName]] "Change to Preset Squad"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "HIRING",
			'OnActionEffect', "mode",
			'OnActionParam', "PresetSquad",
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idAddWeapon",
			'ActionName', T(974342367497, --[[XTemplate IGMainActions ActionName]] "Add Weapon"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnActionEffect', "mode",
			'OnActionParam', "AddWeapon",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idMercHireStatus",
			'ActionName', T(302308637832, --[[XTemplate IGMainActions ActionName]] "Set Merc Hire Status"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "HIRING",
			'OnActionEffect', "mode",
			'OnActionParam', "MercHireStatus",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idStartCombatNow",
			'ActionName', T(857058944110, --[[XTemplate IGMainActions ActionName]] "Start Combat Now"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatDbgStartCombat()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idKillEnemies",
			'ActionName', T(363109047049, --[[XTemplate IGMainActions ActionName]] "Kill Enemies"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("KillAllEnemies")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idEnableTeleport",
			'ActionName', T(523255580551, --[[XTemplate IGMainActions ActionName]] "Enable Teleport"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CheatEnableTeleport()
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idExecute",
			'ActionName', T(172819835508, --[[XTemplate IGMainActions ActionName]] "Execute..."),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CreateRealTimeThread(function()
				local text = WaitInputText(nil, "Enter code to execute:")
				if text then
					local f, err = load(text)
					if f then
						f()
						NetGossip("CheatExecute...", text, GetCurrentPlaytime(), Game and Game.CampaignTime)
					else
						WaitMessage(terminal.desktop, Untranslated("Error"), Untranslated(err))
					end
				end
				CloseMenuDialogs()
				end)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleTeamGodMode",
			'ActionName', T(144846950782, --[[XTemplate IGMainActions ActionName]] "God Mode (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CheatPoVTeam("GodMode")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleTeamInfiniteAP",
			'ActionName', T(420637931620, --[[XTemplate IGMainActions ActionName]] "Infinite AP (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CheatPoVTeam("InfiniteAP")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleInvulnerability",
			'ActionName', T(317031106564, --[[XTemplate IGMainActions ActionName]] "Invulnerability (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CheatPoVTeam("Invulnerability")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleAlwaysHit",
			'ActionName', T(474038022265, --[[XTemplate IGMainActions ActionName]] "Always Hit (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("AlwaysHit")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleAlwaysMiss",
			'ActionName', T(607830665050, --[[XTemplate IGMainActions ActionName]] "Always Miss (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("AlwaysMiss")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleWeakDamage",
			'ActionName', T(844770719605, --[[XTemplate IGMainActions ActionName]] "Weak Damage (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("WeakDamage")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleStrongDamage",
			'ActionName', T(231819785763, --[[XTemplate IGMainActions ActionName]] "Strong Damage (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("StrongDamage")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleInGameInterface",
			'ActionName', T(708163662590, --[[XTemplate IGMainActions ActionName]] "Toggle Game UI"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("CheatEnable", "CombatUIHidden")
				CloseMenuDialogs()
			end,
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat; enabling will prevent unit Stealth",
			'RolloverText', T(162270591211, --[[XTemplate IGMainActions RolloverText]] "Warning: enabling this will make units unable to become Hidden."),
			'ActionId', "idToggleFullVisibility",
			'ActionName', T(692386507713, --[[XTemplate IGMainActions ActionName]] "Full Visibility (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("FullVisibility")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleVisibleCth",
			'ActionName', T(273270532651, --[[XTemplate IGMainActions ActionName]] "Show Chance to Hit (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("CheatEnable", "ShowCth")
				CloseMenuDialogs()
			end,
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleBigGuns",
			'ActionName', T(606913569390, --[[XTemplate IGMainActions ActionName]] "Big Guns (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("CheatEnable", "BigGuns")
				CloseMenuDialogs()
			end,
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleAutoResolveWins",
			'ActionName', T(728314285388, --[[XTemplate IGMainActions ActionName]] "Autoresolve Wins (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("AutoResolve")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleFreeParts",
			'ActionName', T(516122668721, --[[XTemplate IGMainActions ActionName]] "Parts Costs (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("FreeParts")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleFreeMeds",
			'ActionName', T(562777735588, --[[XTemplate IGMainActions ActionName]] "Meds Costs (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("FreeMeds")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleSkillCheck",
			'ActionName', T(691839939763, --[[XTemplate IGMainActions ActionName]] "Successful skill check (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("SkillCheck")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleOneHpEnemies",
			'ActionName', T(712435441991, --[[XTemplate IGMainActions ActionName]] "OneHpEnemies (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("OneHpEnemies")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleFastActivity",
			'ActionName', T(434093606970, --[[XTemplate IGMainActions ActionName]] "Fast Operation (toggle)"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				NetSyncCheatEnableIG("FastActivity")
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idLevelUp",
			'ActionName', T(932813475139, --[[XTemplate IGMainActions ActionName]] "Level Up"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CheatSelectedObjLevelUp()
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idLevelUpMax",
			'ActionName', T(651121926194, --[[XTemplate IGMainActions ActionName]] "Level Up Max"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CheatSelectedObjLevelUp(true)
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idRestoreEnergy",
			'ActionName', T(554288963755, --[[XTemplate IGMainActions ActionName]] "Restore Energy"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CheatRestoreEnergy()
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idRevealTraps",
			'ActionName', T(960199362383, --[[XTemplate IGMainActions ActionName]] "Reveal Traps"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CheatRevealTrapsIG()
				CloseMenuDialogs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idHeallMercs",
			'ActionName', T(898477935029, --[[XTemplate IGMainActions ActionName]] "Heal Mercenaries"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatHealAllMercs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatGetMoney",
			'ActionName', T(402856397119, --[[XTemplate IGMainActions ActionName]] "Add Money"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("CheatGetMoney")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatAddAmmo",
			'ActionName', T(792619595144, --[[XTemplate IGMainActions ActionName]] "Add Ammo"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("CheatAddAmmo", SelectedObj)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatRevealIntel",
			'ActionName', T(105628626083, --[[XTemplate IGMainActions ActionName]] "Reveal Intel for current sector"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("CheatRevealIntelForCurrentSector")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idCheatUnlockAIMPremium",
			'ActionName', T(423599907055, --[[XTemplate IGMainActions ActionName]] "Unlock A.I.M. Gold"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "HIRING",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("CheatUnlockAIMPremium")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idSetLoyalty",
			'ActionName', T(921070062585, --[[XTemplate IGMainActions ActionName]] "Set Loyalty"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnActionEffect', "mode",
			'OnActionParam', "SetLoyaltyCheat",
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleAmbientLife",
			'ActionName', T(151350874939, --[[XTemplate IGMainActions ActionName]] "Toggle Ambient Life"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'ActionShortcut', "Alt-Shift-A",
			'OnActionEffect', "mode",
			'OnActionParam', "ToggleAmbientLife",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncEvents.CheatEnable("FullVisibility", true)
				Msg("WallVisibilityChanged")
				AmbientLifeToggle()
			end,
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'RolloverText', T(309513569916, --[[XTemplate IGMainActions RolloverText]] "Reveals Intel for current sector"),
			'ActionId', "idTriggerWorldFlipCheat",
			'ActionName', T(883426138654, --[[XTemplate IGMainActions ActionName]] "Trigger World Flip"),
			'ActionIcon', "CommonAssets/UI/Icons/internet search web.png",
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncEvent("CheatWorldFlip")
			end,
			'__condition', function (parent, context) return Platform.developer end,
			'replace_matching_id', true,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idToggleCMT",
			'ActionName', T(287218548799, --[[XTemplate IGMainActions ActionName]] "Toggle Hiding Trees/Roofs"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'ActionShortcut', "Alt-Shift-H",
			'OnActionEffect', "mode",
			'OnActionParam', "ToggleAmbientLife",
			'OnAction', function (self, host, source, ...)
				CheatToggleHideTreeRoofs()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idSelectAnyUnit",
			'ActionName', T(184045723568, --[[XTemplate IGMainActions ActionName]] "Select Any Unit"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnActionEffect', "back",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatSelectAnyUnit()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idClearSelection",
			'ActionName', T(538170260107, --[[XTemplate IGMainActions ActionName]] "Clear Selection"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "GENERAL",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatClearSelection()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idGrantAP10",
			'ActionName', T(231842539172, --[[XTemplate IGMainActions ActionName]] "Grant AP 10"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatGrantSelectedObjAP(10)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idGrantAP100",
			'ActionName', T(657226502864, --[[XTemplate IGMainActions ActionName]] "Grant AP 100"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatGrantSelectedObjAP(100)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idRemoveAP1",
			'ActionName', T(878513566041, --[[XTemplate IGMainActions ActionName]] "Remove 1 AP"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatRemoveSelectedObjAP(1)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idAdd10MercStats",
			'ActionName', T(304451034300, --[[XTemplate IGMainActions ActionName]] "Add +10 merc stats"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatIG("CheatAddMercStats")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idRespecPerkPoints",
			'ActionName', T(144644896837, --[[XTemplate IGMainActions ActionName]] "Respec Perk Points"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				CheatRespecPerkPoints(SelectedObj)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idShowSquadsPower",
			'ActionName', T(917884301069, --[[XTemplate IGMainActions ActionName]] "Show squads power"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				NetSyncCheatEnableIG("ShowSquadsPower")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "cheat",
			'ActionId', "idAchievementsDebug",
			'ActionName', T(769821748902, --[[XTemplate IGMainActions ActionName]] "Achievements"),
			'ActionToolbar', "cheats",
			'ActionToolbarSection', "COMBAT",
			'OnAction', function (self, host, source, ...)
				CloseMenuDialogs()
				OpenDialog("AchievementsDebug")
			end,
			'__condition', function (parent, context) return Platform.developer end,
		}),
		PlaceObj('XTemplateAction', {
			'ActionId', "idQuit",
			'ActionName', T(469439401526, --[[XTemplate IGMainActions ActionName]] "Main Menu"),
			'ActionToolbar', "mainmenu",
			'OnAction', function (self, host, source, ...)
				CreateRealTimeThread(function()
					if WaitQuestion(host, T(824112417429, "Warning"), T(356287104069, "Exit to the main menu?"), T(689884995409, "Yes"), T(782927325160, "No")) == "ok" then
						LoadingScreenOpen("idLoadingScreen", "main menu")
						if Game and gv_InitialHiringDone then
							RequestAutosave{ autosave_id = "exitGame", save_state = "ExitGame", display_name = T{380441884540, "<u(Id)>_ExitGame", gv_Sectors[gv_CurrentSectorId]}, mode = "immediate" }
						end
						host:Close()
						OpenPreGameMainMenu("")
						LoadingScreenClose("idLoadingScreen", "main menu")
					end
				end)
			end,
		}),
		}),
})

