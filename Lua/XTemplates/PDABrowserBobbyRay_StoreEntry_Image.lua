-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	__is_kind_of = "XWindow",
	group = "BobbyRayGunsShop",
	id = "PDABrowserBobbyRay_StoreEntry_Image",
	PlaceObj('XTemplateWindow', {
		'RolloverTranslate', false,
		'RolloverTemplate', "RolloverInventory",
		'RolloverAnchor', "left",
		'RolloverText', "placeholder",
		'HandleMouse', true,
		'MouseCursor', "UI/Cursors/Pda_Cursor.tga",
	}, {
		PlaceObj('XTemplateFunc', {
			'name', "Open(self,...)",
			'func', function (self,...)
				XWindow.Open(self,...)
				self:SetRolloverTitle(self:GetContext().DisplayName)
				self:ResolveId("idWeaponImage"):SetImage(self:GetContext().Icon)
				self:ResolveId("idLabelNew"):SetVisible(self:GetContext().New)
				self:ResolveId("idLabelUsed"):SetImage(self:GetContext():GetShopSubIcon())
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XContextImage",
			'Id', "idWeaponImage",
			'Margins', box(5, 5, 5, 5),
			'HAlign', "center",
			'VAlign', "center",
			'Image', "UI/Inventory/dog_tags",
			'ImageFit', "smallest",
			'DisabledImageColor', RGBA(255, 255, 255, 128),
			'ContextUpdateOnOpen', true,
			'OnContextUpdate', function (self, context, ...)
				local item = self.parent:GetContext()
				local stock = item.Stock - (BobbyRayCartGetUnits()[item.id] or 0)
				local hasStock = stock > 0
				self:SetDesaturation(hasStock and 0 or 254)
				self:SetImageColor(RGBA(255,255,255,hasStock and 255 or 128))
			end,
		}),
		PlaceObj('XTemplateWindow', {
			'__context', function (parent, context) return g_BobbyRayCart end,
			'__class', "XText",
			'Id', "idWeaponName",
			'Margins', box(7, 7, 7, 2),
			'Padding', box(0, 0, 0, 0),
			'HAlign', "left",
			'VAlign', "bottom",
			'Clip', false,
			'HandleMouse', false,
			'TextStyle', "PDABobbyStore_HG18G_Shadow",
			'ContextUpdateOnOpen', true,
			'OnContextUpdate', function (self, context, ...)
				self:SetText(self.parent:GetContext().DisplayName)
				local item = self.parent:GetContext()
				-- local stock = item.Stock - BobbyRayCartGetUnits()[item.id] or 0
				local hasStock = BobbyRayCartHasEnoughStock(item)
				local hasMoney = BobbyRayCartHasEnoughMoney(item)
				self:SetTextStyle(hasStock and (hasMoney and "PDABobbyStore_HG18G_Shadow" or "PDABobbyStore_HG18I_Shadow") or "PDABobbyStore_HG18D_Shadow")
			end,
			'Translate', true,
			'WordWrap', false,
			'Shorten', true,
			'TextVAlign', "bottom",
		}),
		PlaceObj('XTemplateWindow', {
			'Margins', box(7, 7, 7, 7),
			'LayoutMethod', "HList",
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XImage",
				'Id', "idLabelNew",
				'Margins', box(0, 0, 5, 0),
				'HAlign', "left",
				'VAlign', "top",
				'MaxWidth', 20,
				'MaxHeight', 20,
				'FoldWhenHidden', true,
				'Background', RGBA(196, 175, 117, 255),
				'HandleMouse', true,
				'Image', "UI/PDA/WEBSites/Bobby Rays/new_item.png",
				'ImageFit', "largest",
			}),
			PlaceObj('XTemplateWindow', {
				'__class', "XImage",
				'Id', "idLabelUsed",
				'Margins', box(0, 0, 1, 0),
				'HAlign', "left",
				'VAlign', "top",
				'MaxWidth', 20,
				'MaxHeight', 20,
				'HandleMouse', true,
				'Image', "UI/Inventory/w_mod.png",
				'ImageFit', "smallest",
			}),
			}),
		PlaceObj('XTemplateWindow', {
			'__condition', function (parent, context) return parent:GetContext().GetShopConditionPercent end,
			'__class', "XText",
			'Id', "idLabelCondition",
			'Margins', box(7, 5, 7, 7),
			'Padding', box(0, 0, 0, 0),
			'HAlign', "right",
			'VAlign', "top",
			'Clip', false,
			'TextStyle', "PDABobbyStore_HG18C_Shadow",
			'ContextUpdateOnOpen', true,
			'OnContextUpdate', function (self, context, ...)
				local item = self:GetContext()
				local hasStock = BobbyRayCartHasEnoughStock(item)
				self:SetText(item:GetShopConditionPercent())
				self:SetTextStyle(hasStock and "PDABobbyStore_HG18C_Shadow" or "PDABobbyStore_HG18D_Shadow")
				
				XText.OnContextUpdate(self,context,...)
			end,
			'Translate', true,
		}, {
			PlaceObj('XTemplateWindow', {
				'comment', "observer for g_BobbyRayCart context changes",
				'__context', function (parent, context) return g_BobbyRayCart end,
				'__class', "XContextWindow",
				'Visible', false,
				'FoldWhenHidden', true,
				'OnContextUpdate', function (self, context, ...)
					self.parent:OnContextUpdate(self.parent:GetContext(), ...)
				end,
			}),
			}),
		PlaceObj('XTemplateWindow', {
			'__condition', function (parent, context) return parent:GetContext().ShopStackSize and parent:GetContext().ShopStackSize ~= 1 end,
			'__class', "XText",
			'Id', "idLabelShopStack",
			'Margins', box(7, 5, 7, 7),
			'Padding', box(0, 0, 0, 0),
			'HAlign', "right",
			'VAlign', "top",
			'Clip', false,
			'TextStyle', "PDABobbyStore_HG18C_Shadow",
			'ContextUpdateOnOpen', true,
			'OnContextUpdate', function (self, context, ...)
				local item = self:GetContext()
				local hasStock = BobbyRayCartHasEnoughStock(item)
				
				local normalStyle = T{532958001928, "<style PDABobbyStore_HG18C_Shadow><cur><valign top 0><style PDABobbyStore_HG16D_Shadow>/<max></style>",
					cur = self:GetContext().ShopStackSize,
					max = self:GetContext().MaxStacks
				}
				
				local outOfStockStyle = T{716983962033, "<style PDABobbyStore_HG18D_Shadow><cur><valign top 0><style PDABobbyStore_HG16D_Shadow_Transparent>/<max></style>",
					cur = self:GetContext().ShopStackSize,
					max = self:GetContext().MaxStacks
				}
				self:SetText(hasStock and normalStyle or outOfStockStyle)
				
				XText.OnContextUpdate(self,context,...)
			end,
			'Translate', true,
			'TextVAlign', "bottom",
		}, {
			PlaceObj('XTemplateWindow', {
				'comment', "observer for g_BobbyRayCart context changes",
				'__context', function (parent, context) return g_BobbyRayCart end,
				'__class', "XContextWindow",
				'Visible', false,
				'FoldWhenHidden', true,
				'OnContextUpdate', function (self, context, ...)
					self.parent:OnContextUpdate(self.parent:GetContext(), ...)
				end,
			}),
			}),
		}),
})

