-- ========== GENERATED BY XTemplate Editor (Alt-F3) DO NOT EDIT MANUALLY! ==========

PlaceObj('XTemplate', {
	SortKey = 1,
	group = "Shortcuts",
	id = "GedShortcuts",
	save_in = "Ged",
	PlaceObj('XTemplateGroup', {
		'__condition', function (parent, context) return Platform.ged end,
	}, {
		PlaceObj('XTemplateAction', {
			'comment', "Show console (Alt-Enter)",
			'ActionId', "DE_Console",
			'ActionTranslate', false,
			'ActionShortcut', "Alt-Enter",
			'OnAction', function (self, host, source, ...)
				ShowConsole(true)
			end,
			'__condition', function (parent, context) return Platform.asserts end,
			'replace_matching_id', true,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "Inspect a live XWindow, its children, properties, focus, mouse target, etc. (Alt-X)",
			'RolloverText', "Inspect a live XWindow, its children, properties, focus, mouse target, etc. (Alt-X)",
			'ActionId', "DE_XWindowInspector",
			'ActionTranslate', false,
			'ActionName', "XWindow Inspector",
			'ActionShortcut', "Alt-X",
			'OnAction', function (self, host, source, ...)
				local dark_mode
				local ged_app = GetChildrenOfKind(terminal.desktop, "GedApp")
				if ged_app[1] then
					dark_mode = ged_app[1].dark_mode
				else
					dark_mode = GetDarkModeSetting()
				end
				OpenXWindowInspector({ EditorShortcut = self.ActionShortcut, dark_mode = dark_mode })
			end,
			'__condition', function (parent, context) return Platform.asserts end,
			'replace_matching_id', true,
		}),
		PlaceObj('XTemplateAction', {
			'comment', "Report Bug (Ctrl-F1)",
			'RolloverText', "Report Bug (Ctrl-F1)",
			'ActionId', "DE_BugReport",
			'ActionTranslate', false,
			'ActionName', "Report Bug",
			'ActionIcon', "CommonAssets/UI/Icons/bacteria bug insect protection security virus.png",
			'ActionShortcut', "Ctrl-F1",
			'OnAction', function (self, host, source, ...)
				CreateRealTimeThread(GedCreateXBugReportDlg)
			end,
			'__condition', function (parent, context) return not Platform.steamdeck and not Platform.demo or Platform.asserts end,
			'replace_matching_id', true,
		}),
		}),
})

